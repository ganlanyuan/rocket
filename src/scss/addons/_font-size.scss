/// Responsive font-size and line-height.
/// 
/// $key: `$map, $breakpoints: $bp`
/// @group addons
/// @param {map | list} $key - key 
/// @example scss - Usage
/// $bp: (
///   small : 480px,
///   medium: 700px,
///   large : 1024px
/// );
/// $p-font-sizes: (
///   null  : (15px, 1.3),
///   small : 16px,
///   medium: (17px, 1.4),
///   900px : 18px,
///   large : (19px, 1.45),
///   1440px: 20px,
/// );
/// $h3-font-sizes: (
///   null  : (18px, 1.3),
///   900px : 22px,
///   large : (30px, 1.2),
/// );
/// h3.example-font-size { @include font-size($h3-font-sizes, $bp); }
/// p.example-font-size { @include font-size($p-font-sizes, $bp); }
/// 
/// @link http://creatiointl.org/gallery/william/rocket/addons-font-size.php demo
/// @link https://github.com/ganlanyuan/rocket full document

@mixin font-size($map, $breakpoints: $bp) {
  @each $breakpoint, $font-size in $map {
    @if $breakpoint == null {
      @include make-font-size($font-size);
    }
    @else {
      // If $font-size is a key that exists in
      // $breakpoints, use the value
      @if map-has-key($breakpoints, $breakpoint) {
        $breakpoint: map-get($breakpoints, $breakpoint);
      }
      @include bp(min $breakpoint) {
        @include make-font-size($font-size);
      }
    }
  }
}

// Utility function for mixin font-size
@mixin make-font-size($font-size) {
  // If $font-size is a list, include
  // both font-size and line-height
  @if type-of($font-size) == "list" {
    font-size: nth($font-size, 1);
    @if unit(nth($font-size, 1)) == 'px' {
      font-size: rem(nth($font-size, 1));
    }
    @if (length($font-size) > 1) {
      line-height: nth($font-size, 2);
    }
  } @else {
    font-size: $font-size;
    @if unit($font-size) == 'px' {
      font-size: rem($font-size);
    }
  }
}
