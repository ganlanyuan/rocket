/// *type* is a shorthand mixin for type.
/// 
/// $key: `$font-size $font-weight $font-style $text-align $line-height $font-family $text-transform`
/// @group addons
/// @param {number | list} $key - key 
/// @example scss - Usage
/// h1 { @include type(20px 'Georgia, Helvetica, sans-serif' 1.4 bold italic) }
/// // font-size: 20px;
/// // font-weight: bold; 
/// // font-style: italic; 
/// // font-family: 'Georgia, Helvetica, sans-serif';
/// // line-height: 1.4;
/// 
/// // Tips: to set 'font-weight', 'font-style', 'text-align' or 'text-transform' value 
/// // to 'inherit' or 'normal', 
/// // you need add prefix 'weight-', 'style-' or 'transform-'.
/// 
/// // $ro-font-weights: thin, hairline, 'extra light', 'ultra light', lighter, light, normal, medium, 'semi bold', 'demi bold', bold, bolder, 'extra bold', black, heavy, 100, 200, 300, 400, 500, 600, 700, 800, 900, weight-normal, weight-inherit !default;
/// // $ro-font-styles: italic, oblique, style-normal, style-inherit !default;
/// // $ro-text-aligns: left, right, center, justify, align-inherit !default;
/// // $ro-text-transforms: capitalize, uppercase, lowercase, none, full-width, transform-inherit !default;
/// 
/// @link http://creatiointl.org/gallery/william/rocket/addons-type.php demo
/// @link https://github.com/ganlanyuan/rocket full document

@mixin type($key){
  $check: join(join(join($ro-font-weights, $ro-font-styles), $ro-text-aligns), $ro-text-transforms);

  // set up font-size, font-weight, line-height
  $font-size: null;
  $font-weight: null;
  $line-height: null;
  @each $item in $key {
    @if type-of($item) == 'number' {
      @if unitless($item) {
        @if $item >= 100 {
          $font-weight: $item;
        } @else {
          $line-height: $item;
        }
      } @else {
        $font-size: $item;
      }
    }
  }

  // set up font-family, font-weight, font-style, text-align, text-transform
  $font-family: ro-get-type($key, 'string', $check);
  $font-weight: ro-get($key, $ro-font-weights); 
  $font-style: ro-get($key, $ro-font-styles);
  $text-align: ro-get($key, $ro-text-aligns);
  $text-transform: ro-get($key, $ro-text-transforms);

  // remove prefix
  @if type-of($font-weight) == 'string' {
    $font-weight: str-cut($font-weight, '-', after);
  }
  @if type-of($font-style) == 'string' {
    $font-style: str-cut($font-style, '-', after);
  }
  @if type-of($text-align) == 'string' {
    $text-align: str-cut($text-align, '-', after);
  }
  @if type-of($text-transform) == 'string' {
    $text-transform: str-cut($text-transform, '-', after);
  }


  // *** output *** //
  @if $font-size {
    font-size: $font-size;
    @if unit($font-size) == 'px' {
      font-size: rem($font-size);
    }
  }
  @if $line-height {
    line-height: $line-height;
  }
  @if $font-weight {
    font-weight: $font-weight;
  }
  @if $font-style {
    font-style: $font-style;
  }
  @if $text-align {
    text-align: $text-align;
  }
  @if $text-transform {
    text-transform: $text-transform;
  }
  @if $font-family {
    font-family: unquote($font-family);
  }
}
