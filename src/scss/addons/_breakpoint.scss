@import '../utilities/args-get';
@import '../utilities/em';
@import '../utilities/list-increase';
@import '../utilities/number-odd-even';

@mixin ro-breakpoint($key){
  $condition: args-get($key, ('min' 'max'), 'min');
  $media: args-get($key, ('all' 'aural' 'braille' 'handheld' 'print' 'projection' 'screen' 'tty' 'tv' 'embossed'));
  $feature: args-get($key, ('width' 'height'), 'width');

  // get breakpoints
  $breakpoint-em: ();
  @each $item in $key {
    @if type-of($item) == 'number' {
      $breakpoint-em: append($breakpoint-em, em($item));
    } @else if type-of($item) == 'list' {
      @each $i in $item {
        @if type-of($item) == 'number' { $breakpoint-em: append($breakpoint-em, em($item)); }
      }
    }
  }
  $breakpoint-em: list-increase($breakpoint-em); 

  $media-string: if($media, '#{$media} and ', '');
  $selector: '';
  
  $length: length($breakpoint-em);
  @if $length == 1 {
    $bp: if($breakpoint-fix and $condition == 'max', (nth($breakpoint-em, 1) - em(1)), nth($breakpoint-em, 1));
    $selector: $media-string + '(#{$condition}-#{$feature}: #{$bp})';
  } @else if $length >= 2 {
    @for $i from 1 through $length {
      @if number-odd-even($i) == 'odd' {
        $selector: $selector + ', ' + $media-string + ' (min-#{$feature}: #{nth($breakpoint-em, $i)})';
      } @else if number-odd-even($i) == 'even' {
        $bp-max: if($breakpoint-fix, (nth($breakpoint-em, $i) - em(1)), nth($breakpoint-em, $i));
        $selector: $selector + 'and (max-#{$feature}: #{$bp-max})';
      }
    }
    // remove the first ', '
    @if str-index($selector, ', ') == 1 { $selector: str-slice($selector, 3); }
  } @else if $length == 0 {
    @error "No breakpoint found.";
  }

  @media #{unquote($selector)} { @content; }
}

@mixin bp($key) {
  @include ro-breakpoint($key) {
    @content;
  };
}