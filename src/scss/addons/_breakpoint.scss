// *** break point *** //

// min-width
@mixin breakpoint-mi($bp-mi-var){
  $min: 0;
  $media: false;

  // get min, media type
  @if type-of($bp-mi-var) == number {
    $min: $bp-mi-var;
  } @else if type-of($bp-mi-var) == list {
    @each $type in $media-types {
      @if index($bp-mi-var, $type) {
        $media: $type;
        $bp-mi-var: reject($bp-mi-var, $type);
      }
      $min: nth($bp-mi-var, 1);
    }
  }

  // px to em
  @if unitless($min) or
      unit($min) == px {
    $min: em($min);
  }

  // output
  @if $media {
    @media #{$media} and (min-width: $min) {
      @content;
    }
  } @else {
    @media (min-width: $min) {
      @content;
    }
  }
}

//  max-width
@mixin breakpoint-ma($bp-ma-var){
  $max: 0;
  $media: false;

  // get max, media type
  @if type-of($bp-ma-var) == number {
    $max: $bp-ma-var;
  } @else if type-of($bp-ma-var) == list {
    @each $type in $media-types {
      @if index($bp-ma-var, $type) {
        $media: $type;
        $bp-ma-var: reject($bp-ma-var, $type);
      }
      $max: nth($bp-ma-var, 1);
    }
  }

  // px to em
  @if unitless($max) or
      unit($max) == px {
    $max: em($max);
  }

  // output
  @if $media {
    @media #{$media} and (max-width: $max) {
      @content;
    }
  } @else {
    @media (max-width: $max) {
      @content;
    }
  }
}

// min-width & max-width
@mixin breakpoint-mm($bp-mm-var){
  $min: 0;
  $max: 0;
  $media: false;

  // get min, max, media type
  @if type-of($bp-mm-var) == list {
    @each $type in $media-types {
      @if index($bp-mm-var, $type) {
        $media: $type;
        $bp-mm-var: reject($bp-mm-var, $type);
      }
      $min: nth($bp-mm-var, 1);
      $max: nth($bp-mm-var, 2);
    }
  }

  // px to em
  @each $item in $min, $max {
    @if unitless($item) or
        unit($item) == px {
      $item: em($item);
    }
  }

  // output
  @if $media {
    @media #{$media} and (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  }
}
