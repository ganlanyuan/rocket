// *** responsive-type *** //
@mixin responsive-type($key) {
  $map: false;
  $condition: args-get($key, ('min' 'max'), 'min');
  $global-bps: false;
  $ie8: args-get($key, 'ie8');

  @if type-of($key) == 'map' {
    $map: $key;
  } @else if type-of($key) == 'list' {
    @each $item in $key {
      @if type-of($item) == 'map' {
        @if not $map {
          $map: $item;
        } @else {
          $global-bps: $item;
        }
      }
    }
  }

  // *** output *** //
  @if $global-bps {
    $map: map-update-breakpoints($map, $global-bps);
  }

  $bps: map-keys($map);
  $bp-max: false;
  @if $ie8 {
    @if $condition == 'max' and 
        index($bps, 'default') or 
        index($bps, null) {
    } @else {
      $bp-max: list-get-max($bps);
    }
  }
  
  @each $bp, $type in $map {
    @if $bp == 'default' or $bp == null {
      @include type($type);
    } @else {
      @include bp($condition $bp) {
        @include type($type);
      }

      // @media fallback for IE8
      @if $bp-max and $bp == $bp-max {
        .lt-ie9 & { @include type($type); }
      }
    }
  }
}


@mixin rp-type($key) {
  @include responsive-type($key);
}