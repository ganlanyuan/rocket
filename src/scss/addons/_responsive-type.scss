// *** responsive-type *** //
@mixin responsive-type($key) {
  $maps: args-get-maps($key);
  $map: false;

  $global-bps: false;
  $condition: args-get($key, ('min' 'max'), 'min');
  $media-type: args-get($key, $ro-media-type);

  // get map
  @if length($maps) >= 1 {
    $map: nth($maps, 1);
  }
  @if length($maps) >= 2 {
    $global-bps: nth($maps, 2);
  }

  // *** output *** //
  @if $global-bps {
    $map: map-update-breakpoints($map, $global-bps);
  }

  @if $map {
    @each $bp, $type in $map {
      @if $bp == 'default' or $bp == null {
        @include type($type);
      } @else {
        @include bp($condition $bp) {
          @include type($type);
        }
      }
    }
  }
}


@mixin rp-type($key) {
  @include responsive-type($key);
}