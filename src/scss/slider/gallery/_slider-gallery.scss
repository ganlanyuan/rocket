// *** slider-gallery *** //
@import 'base';

@mixin slider-gallery(
  $items: 5,
  $ratio: 400/942, 
  $hide: 'autoplay', // none | controls | dots | autoplay
  $default: true
){
  $prefix: get-slider-selector(&);
  $id: "#" + $prefix;
  @at-root (without: media) { // @at-root start

    // base
    @extend %slide-base; 
    @extend %slide-fade-base;
    .slider-container { padding-bottom: percentage($ratio); }

    // setting items
    @for $i from 1 through $items {
      #{$id}-#{$i}:checked ~ {
        .slider-container li:nth-child(#{$i}) .item { 
          @extend %item-active;
        }
      }
    }

    // setting controls
    @if str-index($hide, 'controls') == null {
      // default style
      @if $default == true { @extend %default-controls; }
      // show and hide
      @for $i from 1 through $items {
        #{$id}-#{$i}:checked ~ {
          @if $i == 1 {
            .controls label:nth-child(#{$items}) .prev { @extend %show; }
            .controls label:nth-child(#{$i + 1}) .next { @extend %show; }
          }
          @else if $i == $items {
            .controls label:nth-child(#{$i - 1}) .prev { @extend %show; }
            .controls label:nth-child(1) .next { @extend %show; }
          }
          @else {
            .controls label:nth-child(#{$i - 1}) .prev { @extend %show; }
            .controls label:nth-child(#{$i + 1}) .next { @extend %show; }
          }
        }
      }
    }

    // setting dots
    @if str-index($hide, 'dots') == null {
      @if $default == true { @extend %default-dots; }
      @for $i from 1 through $items {
          #{$id}-#{$i}:checked ~ {
            .dots label:nth-child(#{$i}) .active { @extend %show; }
            .dots label:nth-child(#{$i}) .normal { @extend %hide; }
          }
      }
    }

    // setting autoplay
    @if str-index($hide, 'autoplay') == null {
      @if $default {
        @extend %default-autoplay;
        #{$id}-autoplay:checked ~ .autoplay { label:before { content: '1'; } }
      }
      // animation
      $unit: (100/($peritem * $items));
      @for $i from 1 through $items {
        @include keyframes(#{$prefix}-#{$i}) {
          @if $i == 1 {
            #{percentage(($peritem * $items - 1)*$unit/100)} { @include item-normal; }
            #{percentage(($peritem * $items)*$unit/100)} { @include item-active; }
          }
          @else {
            #{percentage(($peritem * ($i - 1) - 1)*$unit/100)} { @include item-normal; }
            #{percentage(($peritem * ($i - 1))*$unit/100)} { @include item-active; }
          }
          #{percentage(($peritem * $i - 1)*$unit/100)} { @include item-active; }
          #{percentage(($peritem * $i)*$unit/100)} { @include item-normal; }
        }
        #{$id}-autoplay:checked ~ .slider-container li:nth-child(#{$i}) .item {
          @include animation( #{$prefix}-#{$i} $peritem * $items ease infinite);
        }
        &:hover #{$id}-autoplay:checked ~ .slider-container li:nth-child(#{$i}) .item { @include animation-play-state(paused); }
      }
    }

    // hide controls, dots or autoplay
    @each $item in controls, dots, autoplay {
      @if str-index($hide, $item) != null {
        & .#{$item} { display: none !important; }
      }
    }

  } // @at-root end
}