@mixin debug(
  $debug-var:
    12
    gutter 20px
    color rgba(41, 181, 255, .15)
){
  $columns: 0;
  $gutter: 0;
  $color: false;

  @if type-of($debug-var) == number {
    $columns: $debug-var;
  } @else if type-of($debug-var) == list {
    @if index($debug-var, gutter) {
      $gutter: get-next($debug-var, gutter);
      $debug-var: reject($debug-var, $gutter);
      $debug-var: reject($debug-var, gutter);
    }
    @if index($debug-var, color) {
      $color: get-next($debug-var, color);
      $debug-var: reject($debug-var, $color);
      $debug-var: reject($debug-var, color);
    }
    $columns: nth($debug-var, 1);
  }

  $size:null;
  $ratio:null;

	// add unit to gutter
	@if $gutter and unitless($gutter) and $gutter > 0 and $gutter < 1 { $gutter: percentage($gutter); }

	@if not $gutter or $gutter == 0 {
    $size: percentage(1 / $columns);

    @include background-image(linear-gradient(to right, $color, $color));
    background-size: $size auto;
  }
	@else if unit($gutter) == '%' {
		$cw: ((100% - ($columns - 1) * $gutter) / $columns);
		$gw: $gutter;
    $size: (100% + $gw) / $columns;
    $ratio: percentage($cw / ($cw + $gw));

    @include background-image(linear-gradient(to right, $color $ratio, transparent $ratio));
    background-size: $size auto;
  }
  @else {
    $percentage: percentage(1 / $columns);
    $per-gutter: $gutter / $columns;
    $size: #{$percentage} + #{$per-gutter};
    $ratio: $gutter;

    @include background-image(linear-gradient(to right, transparent $ratio, $color $ratio));
    background-size: calc(#{$size}) auto;
    background-position: -$gutter top;
  }
  
  background-repeat: repeat;
}
