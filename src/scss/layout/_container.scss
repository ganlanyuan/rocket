// *** container *** //
@mixin container($key: false){
  $container: false;
  $gutter: ro-get-next($key, 'gutter', map-get($ro-layout, 'gutter'));
  $align: ro-get($key, (left right center), center);

  @if type-of($key) == 'number' {
    $container: $key;
  } @else if type-of($key) == list {
    @if index($key, 'gutter') {
      $key: reject($key, $gutter);
    }

    @each $item in $key {
      @if type-of($item) == 'number'{
        @if not $container {
          $container: $item;
        } @else {
          $gutter: $item;
        }
      } 
    }
  }

  @if not $container {
    $container: map-get($ro-layout, container);
  }

  // strip unit when gutter == 0
  @if $gutter and strip-unit($gutter) == 0 {
    $gutter: 0;
  }

  // *** output *** //
  @extend %ro-clearfix;
  @extend %ro-global-transition;

  padding: 0 $gutter;
  @if $align == center {
    padding: 0 calc(50% - #{$container / 2});
  } @else {
    padding-#{opposite($align)}: calc(100% - #{$container + $gutter});
  } 

  $breakpoint: $container;
  @if unit($gutter) != '%' and unit($container) == unit($gutter) {
    $breakpoint: ( $container + ( $gutter * 2 ) );
  } @else {
    $breakpoint: (em($container) + em(40));
  }

  // for small screen
  @include bp('max' $breakpoint) { 
    padding: 0 $gutter; 
  }

  // // flexible container
  // @if unit($container) == '%' {
  //   @if $gutter {
  //     margin-left: $gutter;
  //     margin-right: $gutter;
  //   }
  // // fixed container
  // } @else {
  //   @if $gutter and $gutter != 0 { 
  //     $breakpoint: $container;
  //     @if unit($gutter) != '%' and unit($container) == unit($gutter) {
  //       $breakpoint: ( $container + ( $gutter * 2 ) );
  //     }

  //     @include bp('max' $breakpoint) { 
  //       margin-left: $gutter; 
  //       margin-right: $gutter; 
  //     }
  //   }
  // }
}