// *** container *** //
@mixin container(
  $container-var: 
    map-get($layout, container) 
    map-get($layout, gutter) 
    center
){
  $container: 0;
  $gutter: 0;
  $align: center;

  @if type-of($container-var) == number {
    $container: $container-var;
    $gutter: map-get($layout, gutter);
    $align: center;
  } @else if type-of($container-var) == list {
    @each $direction in left, right, center {
      @if index($container-var, $direction) { 
        $align: $direction;
        $container-var: reject($container-var, $direction);
      } 
    }

    $container: nth($container-var, 1);
    @if length($container-var) >= 2 {
      $gutter: nth($container-var, 2);
    } @else {
      $gutter: map-get($layout, gutter);
    }
  } @else {
    $container: map-get($layout, container);
    $gutter: map-get($layout, gutter);
    $align: center;
  }

  // output
  @extend %clearfix;
  max-width: $container;

  @if unit($container) == '%' {
    @if $align == center {
      margin-left: auto; 
      margin-right: auto; 
    }
    @else {
      margin-#{opposite($align)}: auto;
    } 
    @if $gutter {
      padding-left: $gutter;
      padding-right: $gutter;
    }
  }
  @else {
    @if $gutter and $gutter != 0 { 
      margin-left: $gutter; 
      margin-right: $gutter; 

      $container-breakpoint: $container;
      @if unit($gutter) != '%' and unit($container) == unit($gutter) {
        $container-breakpoint: ( $container + ( $gutter * 2 ) );
      }

      @if $align == center {
        @include breakpoint-mi($container-breakpoint) { 
          margin-left: auto; 
          margin-right: auto; 
        }
      }
      @else { 
        @include breakpoint-mi($container-breakpoint) { 
          margin-#{opposite($align)}: auto; 
        }
      }
    }
  }
}

