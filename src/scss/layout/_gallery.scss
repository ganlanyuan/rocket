/// *gallery* is for creating picture galleries.
/// 
/// $key: `$per-row $gutter (child $child) $float $position keep`
/// @group layout
/// @param {number | list} $key - key 
/// @example scss - Usage
/// .pic { @include gallery(3 2% child li middle); }
/// // per-row: 3;
/// // gutter: 2%;
/// // child: li;
/// // float: left; (default)
/// // position: middle; (same padding on the top and bottom for each item)
/// 
/// .pic { @include gallery(4 child li keep); }
/// // Keep: similar with span(keep).
/// @require {mixin} wrap
/// @link https://github.com/ganlanyuan/rocket full document

@mixin gallery($key){
  $per-row: 1;
  $gutter: map-get($ro-layout, gutter);
  $child: '*';
  $float: left;
  $position: middle;
  $keep: false;

  @if type-of($key) == number {
    $per-row: $key;  
  } @else if type-of($key) == list {

    // set up per-row, gutter
    @for $i from 1 through length($key) {
      $val: nth($key, $i);

      @if type-of($val) == number {
        @if unitless($val) {
          $per-row: $val;
        } @else {
          $gutter: $val;
        }
      }
    }

    // set up float
    @each $this-float in left, right {
      @if index($key, $this-float) { 
        $float: $this-float;
      } 
    }

    // set up position
    @each $this-position in middle, bottom {
      @if index($key, $this-position) { 
        $position: $this-position;
      } 
    }

    // set up child
    @if index($key, child) {
      $child: get-next($key, child);
    }

    // set up keep
    @if index($key, keep) {
      $keep: true;
    }
  }

  // set up gallery container
  @if not $keep {
    @if $gutter and $gutter != 0 {
      @include wrap($gutter);
    }
  }

  // set up gallery items
  > #{$child} {
    width: percentage(1 / $per-row);
    &:nth-child(#{$per-row}n+1) { clear: both; }
    @for $i from 2 through $per-row {
      &:nth-child(#{$per-row}n+#{$i}) {
        clear: none;
      }
    }

    // set up gallery gutter
    @if not $keep {
      float: $float;
      box-sizing: border-box;
      @if $gutter and $gutter != 0{
        @if $position == bottom { 
          padding: 0 ($gutter / 2) $gutter; 
        } @else { 
          padding: ($gutter / 2); 
        }
      }
    }
  }
}
