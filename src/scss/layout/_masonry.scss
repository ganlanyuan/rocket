// *** masonry *** //
@mixin masonry ($key) {
  $map: false;
  $count: false;
  $child: args-get-next($key, 'child', 'li');
  $gutter: args-get-next($key, 'gutter');

  $global-bps: args-get-global-breakpoints($key);
  @if $global-bps { $key: list-remove($key, $global-bps); } // remove global-breakpoints from args if exist
  $bps: false;
  $condition: args-get($key, ('min' 'max'), 'min');
  $media-type: args-get($key, $ro-media-type);

  // get map or count
  @if type-of($key) == 'map' {
    $map: $key;
  } @else if type-of($key) == 'number' and unitless($key) { 
    $count: $key;
  } @else if type-of($key) == 'list' {
    @each $item in $key {
      @if not $map and type-of($item) == 'map' {
        $map: $item;
      } @else if not $count and type-of($item) == 'number' and unitless($item) {
        $count: $item;
      }
    }
  } 

  // transfer % to em
  @if $gutter and strip-unit($gutter) != 0 and 
      index(('%', 'vw', 'vmax'), unit($gutter)) != null{
    $gutter: to-length((strip-unit($gutter) * 10 / 16), em);
  }

  // *** output *** //
  overflow: hidden; // fix an chrome overflow
  @if $gutter {
    -webkit-column-gap: $gutter;
       -moz-column-gap: $gutter;
            column-gap: $gutter;
  }
  > #{$child} {
    @if $gutter {
      padding-bottom: $gutter;
    } @else {
      padding-bottom: 1em;
    }

    -webkit-column-break-inside: avoid;
              page-break-inside: avoid;
                   break-inside: avoid;
  }

  @if $map {
    @if $global-bps { $map: map-update-breakpoints($map, $global-bps); }
    $bps: map-keys($map);

    @each $bp in $bps {
      $new-count: map-get($map, $bp);

      @if $bp == 'default' or $bp == null {
        -webkit-column-count: $new-count;
           -moz-column-count: $new-count;
                column-count: $new-count;

      } @else if type-of($bp) == 'number' {
        @include bp($condition $media-type $bp) {
          -webkit-column-count: $new-count;
             -moz-column-count: $new-count;
                  column-count: $new-count;
        }
      }
    }
  } @else if $count {
    -webkit-column-count: $count;
       -moz-column-count: $count;
            column-count: $count;
  }
}