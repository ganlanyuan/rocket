/// Short hands for creating button.
/// 
/// $key: `$font-size $padding $color radius round hover`
/// @group components
/// @param {number | list} $key - key 
/// @example scss - Usage
/// .button { @include button(14px #00c8ff '0.8em 1em' radius hover); }
/// // font-size: 14px;
/// // background-color: #00c8ff;
/// // padding: 0.8em 1em; (Tips: padding must be quoted)
/// // radius: 0.22em; (default, you can modify it by change the varible "$ro-button-radius: 0.22em;" )
/// // hover: true; (change background-color when mouse over)
/// 
/// @link http://creatiointl.org/gallery/william/rocket/components-button.php demo
/// @link https://github.com/ganlanyuan/rocket full document

@mixin button ($key: '0.5em 0.8em' radius){
  $padding: false;
  $check: join($ro-button-hover, ('round' 'hover' 'horizontal' 'vertical'));

  $padding: '1em 1.5em';
  $color: ro-get-type($key, 'color'); 
  $round: ro-get($key, 'round');
  $radius: false;
  $horizontal: ro-get($key, 'horizontal');
  $vertical: ro-get($key, 'vertical');
  $hover: ro-get($key, $ro-button-hover);
  $duration: 0.3s;
  $timing-function: ease;

  @each $item in $key {
    @if type-of($item) == 'number' {
      @if unit($item) == 's' {
        $duration: $item;
      } @else if unit($item) == 'px' or unit($item) == 'em' or unit($item) == 'rem' or unit($item) == 'vw' {
        $radius: $item;
      }
    } @else if type-of($item) == 'string' {
      @if index($ro-timing-function, $item) or str-index($item, 'cubic-bezier') {
        $timing-function: unquote($item);
      } @else if not index($check, $item) {
        $padding: unquote($item);
      }
    }
  }

  // *** output *** //
  @extend %button-style;
  @if $padding {
    padding: $padding;
  }
  @if $radius {
    border-radius: $radius;
  }
  @if $round {
    border-radius: $ro-button-round;
  }
  @if $color {
    background-color: $color;
    color: contrast($color);
    @if $hover {
      @if $hover == 'slide-bg' {
        transition: background-position $duration $timing-function, color $duration $timing-function;
        background-size: 200% 200%;
        @if $vertical {
          background-image: linear-gradient(to bottom, lighten($color, $ro-button-hover-lightness), lighten($color, $ro-button-hover-lightness) 50%, $color 50%, $color);
          background-position: 0 bottom;
        } @else {
          background-image: linear-gradient(to right, lighten($color, $ro-button-hover-lightness), lighten($color, $ro-button-hover-lightness) 50%, $color 50%, $color);
          background-position: right 0;
        }
        &:hover { 
          background-position: 0 0; 
          @if contrast($color) != contrast(lighten($color, $ro-button-hover-lightness)) {
            color: contrast(lighten($color, $ro-button-hover-lightness));
          }
        }
      } @else if $hover == 'highlight' {
        transition: background-color $duration $timing-function, color $duration $timing-function;
        &:hover {
          background-color: analogous($color $ro-button-hover-lightness);
          @if contrast($color) != contrast(analogous($color $ro-button-hover-lightness)) {
            color: contrast(analogous($color $ro-button-hover-lightness));
          }
        }
      } @else if $hover == 'simple' {
        color: $color;
        border: 2px solid $color;
        background-color: transparent;
        transition: background-color $duration $timing-function, border-color $duration $timing-function, color $duration $timing-function;
        &:hover {
          color: contrast($color);
          border: 2px solid $color;
          background-color: $color;
        }
      } @else if $hover == 'water-drop' {
        position: relative;
        z-index: 1;
        overflow: hidden;
        &:before {
          @include transform(scale(0));
          content: '';
          position: absolute;
          left: 50%;
          top: 50%;
          z-index: -1;
          width: 10em;
          height: 10em;
          margin-left: -5em;
          margin-top: -5em;
          border-radius: 50%;
          background-color: analogous($color $ro-button-hover-lightness);
          transition: transform $duration $timing-function;
        }
        &:hover:before {
          @include transform(scale(1));
        }
      }
    } 
  }
}
