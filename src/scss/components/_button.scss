@mixin button ($key: ('style': 'highlight')){
  $style: args-get($key, ('highlight' 'simple' 'slide' 'ripple' 'veil' 'push' 'cut' 'bubble' 'line-drawing' 'shake'), 'highlight');
  $direction: args-get($key, ('left' 'right' 'top' 'bottom' 'horizontal' 'vertical'), 'left');

  $color1: false;
  $color2: false;
  $duration: 0.3s;
  $timing-function: ease;
  $selector: ':hover';
  @each $item in $key {
    @if type-of($item) == 'color' {
      @if not $color1 {
        $color1: $item;
      } @else {
        $color2: $item;
      }
    } @else if type-of($item) == 'number' and unit($item) == 's' {
      $duration: $item;
    } @else if type-of($item) == 'string' {
      @if index(('.', '#', ':', '['), str-slice($item, 1, 1)) {
        $selector: $item;
      } @else if index(('linear' 'ease' 'ease-in' 'ease-out' 'ease-in-out' 'step-start' 'step-end'), $item) or str-index($item, 'cubic-bezier') {
        $timing-function: unquote($item);
      }
    }
  }
  @if not $color1 { $color1: #e2e2e2; }
  @if not $color2 { $color2: analogous($color1 10%); }

  @if not index(('simple' 'veil' 'line-drawing'), $style) {
    background: $color1;
    color: contrast($color1);
  }
  @if $style == 'slide' {
    @include button-pos-r();
    &:before {
      @include button-pos-a();
      width: 100%;
      height: 100%;
      @if index((left right), $direction) {
        top: 0px;
      } @else {
        left: 0px;
      }
      #{$direction}: -100%;
      background: $color2;
      transition: #{$direction} $duration $timing-function;
    }
    &#{$selector} {
      @if contrast($color1) != contrast($color2) {
        color: contrast($color2);
      }
      &:before { #{$direction}: 0px; }
    }
  } @else if $style == 'highlight' {
    transition: background $duration $timing-function, color $duration $timing-function;
    &#{$selector} {
      background: $color2;
      @if contrast($color1) != contrast($color2) {
        color: contrast($color2);
      }
    }
  } @else if $style == 'simple' {
    color: $color1;
    border: 1px solid $color1;
    background: transparent;
    transition: background $duration $timing-function, color $duration $timing-function;
    &#{$selector} {
      color: contrast($color1);
      border-color: $color1;
      background: $color1;
    }
  } @else if $style == 'ripple' {
    @include button-pos-r();
    &:before {
      @include button-pos-a();
      @include ro-transform(scale(0));
      opacity: 1;
      content: '';
      position: absolute;
      left: 50%;
      top: 50%;
      z-index: -1;
      width: 10em;
      height: 10em;
      margin-left: -5em;
      margin-top: -5em;
      border-radius: 50%;
      background: $color2;
      @include ro-keyframes(button-ripple) {
        to {
          @include ro-transform(scale(1));
          opacity: 0;
        }
      }
      .lt-ie9 & { display: none; }
    }
    &#{$selector}:before {
      @include ro-animation(button-ripple 1s 1);
      .lt-ie9 & { display: block; }
    }
  } @else if $style == 'veil' {
    @include button-pos-r();
    color: $color1;
    border: 1px solid currentColor;
    .lt-ie9 & { border: 1px solid $color1; }
    background: transparent;
    transition: background $duration $timing-function, color $duration $timing-function;
    &:before {
      @include button-pos-a();
      opacity: 0;
      @if $direction == vertical {
        @include ro-transform(scaleY(0.7));
      } @else {
        @include ro-transform(scaleX(0.7));
      }
      left: 0px;
      top: 0px;
      width: 100%;
      height: 100%;
      background: $color1;
      transition: transform $duration $timing-function, opacity $duration $timing-function;
      .lt-ie9 & { display: none; }
    }
    &#{$selector} {
      color: contrast($color1);
      &:before {
        opacity: 1;
        @if $direction == vertical {
          @include ro-transform(scaleY(1));
        } @else {
          @include ro-transform(scaleX(1));
        }
        .lt-ie9 & { display: block; }
      }
    }
  } @else if $style == 'push' {
    @include button-pos-r();
    span, &:before {
      transition: transform $duration $timing-function, opacity $duration $timing-function;
    }
    span {
      opacity: 1;
      @include ro-transform(translateY(0));
      display: block;
    }
    &:before {
      opacity: 0;
      @if $direction == bottom {
        @include ro-transform(translateY(-20%));
      } @else if $direction == left {
        @include ro-transform(translateX(20%));
      } @else if $direction == right {
        @include ro-transform(translateX(-20%));
      } @else {
        @include ro-transform(translateY(20%));
      }
      position: absolute;
      left: 0px;
      top: 0px;
      width: 100%;
      height: 100%;
      box-sizing: border-box;
      .lt-ie9 & { display: none; }
      content: attr(data-text);
    }
    &#{$selector} {
      span {
        opacity: 0;
        @if $direction == bottom {
          @include ro-transform(translateY(20%));
        } @else if $direction == left {
          @include ro-transform(translateX(-20%));
        } @else if $direction == right {
          @include ro-transform(translateX(20%));
        } @else {
          @include ro-transform(translateY(-20%));
        }
      }
      &:before {
        opacity: 1;
        @include ro-transform(translateY(0));
        .lt-ie9 & { display: block; }
      }
    }
  } @else if $style == 'cut' {
    @include button-pos-r;
    transition: color $duration $timing-function;
    &:before {
      @include button-pos-a;
      @include ro-transform(rotate3d(0, 0, 1, -45deg) translate3d(0px, -3em, 0px));
      @include ro-transform-origin(0% 100% 0px);
      left: 0px;
      top: 0px;
      width: 150%;
      height: 100%;
      background: $color2;
      transition: transform $duration $timing-function;
      .lt-ie9 & { display: none; }
    }
    &#{$selector} {
      &:before {
        @include ro-transform(rotate3d(0, 0, 1, 0deg));
        .lt-ie9 & { display: block; }
      }
    }
  } @else if $style == 'bubble' {
    @include button-pos-r();
    overflow: visible;
    &:before {
      @include button-pos-a();
      left: 0px;
      right: 0px;
      top: 0px;
      bottom: 0px;
      opacity: 0;
      border: 1px solid $color1;
      transition: transform $duration $timing-function, opacity $duration $timing-function;
      @include ro-keyframes(button-bubble) {
        60% {
          left: -0.7em;
          right: -0.7em;
          top: -0.7em;
          bottom: -0.7em;
          opacity: 0.8;
        }
        100% {
          left: -1em;
          right: -1em;
          top: -1em;
          bottom: -1em;
          opacity: 0;
        }
      }
    }
    &#{$selector}:before { @include ro-animation(button-bubble 0.7s 1); }
  } @else if $style == 'line-drawing' {
    @include button-pos-r();
    span {
      position: absolute;
      display: block;
      box-sizing: border-box;
      background: $color1;
      transition: width $duration $timing-function, height $duration $timing-function;
      &:nth-child(1) {
        left: 0px;
        top: 0px;
      }
      &:nth-child(2) {
        right: 0px;
        bottom: 0px;
      }
      &:nth-child(3) {
        top: 0px;
        right: 0px;
      }
      &:nth-child(4) {
        left: 0px;
        bottom: 0px;
      }
      &:nth-child(1), 
      &:nth-child(2) {
        width: 0px;
        height: 1px;
      }
      &:nth-child(3), 
      &:nth-child(4) {
        width: 1px;
        height: 0px;
      }
    }
    &#{$selector} {
      span {
        &:nth-child(1),
        &:nth-child(2) { width: 100%; }
        &:nth-child(3),
        &:nth-child(4) { height: 100%; }
      }
    }
  } @else if $style == 'shake' {
    &#{$selector} { @include shake(); }
  } @else if $style == 'new' {
  }
}

@mixin button-pos-r (){
  position: relative;
  overflow: hidden;
  z-index: 1;
}
@mixin button-pos-a (){
  content: '';
  position: absolute;
  z-index: -1;
}

@mixin shake($key: false){
  $duration: 0.3s;
  @if $key {
    $duration: $key;
  }
  @include ro-keyframes(button-shake) {
    0%, 100% { transform: translateX(0);}
    16.6%, 50%, 83.3% { transform: translateX(-0.6em);}
    33.3%, 66.6% { transform: translateX(0.6em);}
  }
  @include ro-animation(button-shake $duration 1); 
}

