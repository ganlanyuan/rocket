/// *offcanvas* and *page-container* are for creating the navigation of mobile site.
///
/// $key: `$style $direction animation $offcanvas-width $padding $background-color`
/// @group components
/// @param {list} $key - key 
/// @example markup - markup
/// <!-- include kit.js -->
/// <script src="path/to/kit.min.js"></script>
/// 
/// <!-- offcanvas -->
/// <nav class="nav">
///   <ul>
///     <li><span data-offcanvas-close>close</span></li>
///     <li><a href="">item01</a></li>
///     <li><a href="">item02</a></li>
///     <li><span data-icon-haschild><span class="ic-angle-right"></span></span><a href="">/// item03</a>
///       <ul data-offcanvas-subnav>
///         <li data-offcanvas-back>back</li>
///         <li><a href="">sub item02</a></li>
///         <li><a href="">sub item03</a></li>
///         <li><a href="">sub item04</a></li>
///       </ul>
///     </li>
///     <li><a href="">item04</a></li>
///   </ul>
/// </nav>
/// 
/// <!-- page -->
/// <div class="page">
///   <!-- page cover -->
///   <div data-page-cover=""></div>
/// 
///   <!-- nav icon -->
///   <div data-icon-nav></div>
/// </div>
/// @example scss - Usage
/// .nav { @include offcanvas(translate 300px '1em' left #102244 animation); }
/// // style: translate; (move | transition | reveal)
/// // offcanvas-width: 300px;
/// // nav-item-padding: 1em;
/// // direction: left; (left | right)
/// // offcanvas-background-color: #102244;
/// // animation: true;
/// 
/// @link http://creatiointl.org/gallery/william/rocket/components-offcanvas.php demo
/// @link https://github.com/ganlanyuan/rocket full document

@mixin offcanvas (
  $key:
    move
    left
    200px
    'em(16, 14)'
    #000
){
  $check: append(join($ro-offcanvas-styles, $ro-offcanvas-direction), 'animation');

  $style: ro-get($key, $ro-offcanvas-styles, 'move');
  $direction: ro-get($key, $ro-offcanvas-direction, left);
  $animation: ro-get($key, 'animation', true);
  $offcanvas-width: ro-get-type($key, 'number', false, 200px);
  $padding: unquote(ro-get-type($key, 'string', $check, em(16, 14)));
  $background-color: ro-get-type($key, 'color', false, #000);


  // *** output *** //
  position: fixed;
  top: 0;
  height: 100%;
  color: contrast($background-color);
  background: $background-color;
  z-index: 300;
  box-sizing: border-box;
  -webkit-transition: all $ro-global-animation-duration $ro-global-bezier 0s;
  transition: all $ro-global-animation-duration $ro-global-bezier 0s;
  li { 
    line-height: 1;
    white-space: nowrap;
    @include clearfix;
    a { 
      display: block;
      padding: $padding;
      color: contrast($background-color);
      -webkit-transition: all $ro-global-animation-duration $ro-global-bezier 0s;
      transition: all $ro-global-animation-duration $ro-global-bezier 0s;
      &:hover { 
        text-decoration: none;
        background-color: analogous($background-color 7%); 
      }
    }
  }
  .active > a,
  .current > a { background-color: analogous($background-color 13%); }
  [data-offcanvas-close] { cursor: pointer; }
  [data-offcanvas-subnav] {
    width: 100%;
    position: absolute;
    left: 100%;
    top: 0;
    bottom: 0;
    background-color: $background-color;
    -webkit-transition: left .3s $ro-global-bezier 0s;
    transition: left .3s $ro-global-bezier 0s;
  }
  [data-offcanvas-back]{ 
    padding: $padding;
    cursor: pointer;
    background-color: analogous($background-color 7%);
  }
  [data-icon-haschild] { 
    display: inline-block;
    padding: $padding;
    float: right;
    height: 1em;
    cursor: pointer;
   &:hover { background-color: analogous($background-color 7%); } 
  }
  @at-root { .offcanvas-show .mb-subnav-show { left: 0; } }

  // styles
  @if $style == move {
    .offcanvas-show & { margin-#{$direction}: 0; }
  }
  @if $style == translate {
    .offcanvas-show & { #{$direction}: $offcanvas-width; }
  }
  @if $style == reveal { z-index: 100; }
  @if $direction == left or 
      $direction == right {
    width: $offcanvas-width;
    overflow-x: hidden;
    overflow-y: auto;
    #{$direction}: 0;
    @if $style == move or 
        $style == translate { margin-#{$direction}: -$offcanvas-width; }
  }

  // animation
  @if $animation == true {
    & > ul > li > a {
      opacity: 0;
      @include transform(translate3d(-100%,0,0));
      .offcanvas-show & { 
        opacity: 1; 
        @include transform(none);
      }
    }
    [data-offcanvas-subnav] a {
      opacity: 0;
      @include transform(translate3d(100%,0,0));
    }
    .mb-subnav-show a {
      opacity: 1;
      @include transform(none);
    }
    @for $i from 1 through $ro-offcanvas-length {
      & > ul > li:nth-child(#{$i}) > a ,
      [data-offcanvas-subnav] li:nth-child(#{$i}) a {
        @include transition-delay(($i * $ro-global-animation-duration / $ro-offcanvas-length));
      }
    }
  }
}

/// *offcanvas* and *page-container* are for creating the navigation of mobile site.
///
/// $key: `$style $direction $offcanvas-width $cover-bg`
/// @group components
/// @param {list} $key - key 
/// @example scss - Usage
/// .page { @include page-container(translate left 300px); }
/// // style: translate;
/// // offcanvas-width: 300px;
/// // direction: left;
///
/// @link https://github.com/ganlanyuan/rocket full document

@mixin page-container(
  $key:
    200px
    move
    left
    rgba(0,0,0,.35) 
){
  $style: ro-get($key, $ro-offcanvas-styles, 'move');
  $direction: ro-get($key, $ro-offcanvas-direction, left);
  $offcanvas-width: ro-get-type($key, 'number', false, 200px);
  $cover-bg: ro-get-type($key, 'color', false, rgba(0,0,0,.35));


  // *** output *** //
  position: relative;
  background-color: #fff;
  -webkit-transition: all $ro-global-animation-duration $ro-global-bezier 0s;
  transition: all $ro-global-animation-duration $ro-global-bezier 0s;
  > [data-page-cover] {
    display: block;
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    -webkit-transition: all $ro-global-animation-duration $ro-global-bezier 0s;
    transition: all $ro-global-animation-duration $ro-global-bezier 0s;
    .offcanvas-show & {
      background-color: $cover-bg;
      z-index: 200;
      cursor: pointer;
    }
  }
  @if $direction == left or 
      $direction == right { #{$direction}: 0; }
  @if $style == translate or 
      $style == reveal {
    .offcanvas-show & { #{$direction}: $offcanvas-width; }
  }
  @if $style == reveal {
    min-width: 320px;
    background-color: #fff;
    z-index: 200;
  }
}
