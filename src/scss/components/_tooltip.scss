/// pure css *tooltip*.
/// 
/// $key: `$direction $color radius (width $width) (height $height)`
/// @group components
/// @param {number | list} $key - key 
/// @example scss - Usage
/// .tooltip { @include tooltip(radius right #b02df3 width 300px); }
/// // radius: 0.22em; (This can be custmized by changing "$tooltip-radius: 0.22em !default;")
/// // direction: right;
/// // background-color: #b02df3;
/// // width: 300px; (for old browsers)
/// 
/// // To make tooltip shows perfect, 
/// // it's better to set tooltip box as a block element, 
/// // or give it a width;
/// 
/// @link http://creatiointl.org/gallery/william/rocket/components-tooltip.php demo
/// @link https://github.com/ganlanyuan/rocket full document

@mixin tooltip(
  $key:
    width
    230px
    height
    3.94em
) {
  $direction: false;
  $color: false;
  $radius: false;
  $width: 230px;
  $height: 3.94em;
  $content: attr(data-tooltip);

  @if type-of($key) == color {
    $color: $key;
  } @else if type-of($key) == string {
    @if $key == radius {
      $radius: true;
    } @else if index($ro-tooltip-direction, $key) {
      $direction: $key;
    }
  } @else if type-of($key) == list {
    @if index($key, width) {
      $width: get-next($key, width);
    }
    @if index($key, height) {
      $height: get-next($key, height);
    }

    @for $i from 1 through length($key) {
      $item: nth($key, $i);

      @if type-of($item) == color {
        $color: $item;
      } @else if type-of($item) == string {
        @if $item == radius {
          $radius: true;
        } @else if index($ro-tooltip-direction, $item) {
          $direction: $item;
        }
      }
    }
  }

  position: relative;
  cursor: pointer;
  &:before, 
  &:after {
    @extend %tooltip-common;
    #{$direction}: -8px;
  }
  &:before { content: ''; }
  &:after {
    @extend %tooltip-content;
    content: $content;
    background-color: $color;
    max-width: $width;
    @if $radius { border-radius: $ro-tooltip-radius; }
  }
  .no-csstransforms &:after { width: $width; }
  @if $direction == top or $direction == bottom {
    &:before,
    &:after { left: 50%; }
    &:before { margin-left: -6px; }
    .no-csstransforms &:before,
    .no-csstransforms &:after { #{opposite($direction)}: 100%; }
    .no-csstransforms &:after { 
      margin-left: - ($width / 2); 
      height: $height;
    }
  }
  @else if $direction == left or $direction == right {
    &:before,
    &:after { top: 50%; }
    &:before { margin-top: -6px; }
    .no-csstransforms &:before,
    .no-csstransforms &:after { top: 0; }
    .no-csstransforms &:before { margin-top: 4px; }
  }
  @if $direction == top {
    &:before { @include triangle(12px, $color, down); }
    &:after { @include transform(translate(-50%, -100%)); }
    .no-csstransforms &:after { margin-top: - $height; }
  }
  @else if $direction == bottom {
    &:before { @include triangle(12px, $color, up); }
    &:after { @include transform(translate(-50%, 100%)); }
    .no-csstransforms &:after { margin-top: 6px; }
  }
  @else if $direction == left {
    &:before { @include triangle(12px, $color, right); }
    &:after { @include transform(translate(-100%, -50%)); }
    .no-csstransforms &:after { left: (- $width - 8px); }
  }
  @else if $direction == right {
    &:before { @include triangle(12px, $color, left); }
    &:after { @include transform(translate(100%, -50%)); }
    .no-csstransforms &:after {
      left: 100%;
      margin-left: 8px;
    }
  }
}