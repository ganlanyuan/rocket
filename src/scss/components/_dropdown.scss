/// $key: `$child $show $style $direction default`
/// @group components
/// @param {number | list} $key - key 
/// @example markup - Markup
/// <!-- 
///   if you set $show: click, add these markup to your dropdown 
///   make sure the value of "for" match the checkbox id
///   -->
/// 
/// <div class="dropdown">
///   <span>dropdown</span>
///   <input type="checkbox" name="" id="dropdown">
///   <label for="dropdown"></label>
///   <ul>
///     <li><a href="">item01</a></li>
///     <li><a href="">item02</a></li>
///     <li><a href="">item03</a></li>
///   </ul>
/// </div>
/// @example scss - Usage
/// .dropdown { @include dropdown(ul hover display right default); }
/// // child: ul;
/// // show: hover; (hover | click)
/// // style: display; (scale | display)
/// // direction: right; (left | right)
/// // default: true; (use default dropdown menu style)
///
/// @link http://creatiointl.org/gallery/william/rocket/components-dropdown.php demo
/// @link https://github.com/ganlanyuan/rocket full document

@mixin dropdown(
  $key:
    'ul'
){
  $check: append(
      join(
        join($ro-dropdown-show, $ro-dropdown-style, comma), 
        $ro-dropdown-direction, 
        comma
      ), 
      'default', 
      comma
    );

  $child: ro-get-type($key, 'string', $check, 'ul');
  $show: ro-get($key, $ro-dropdown-show, 'hover');
  $style: ro-get($key, $ro-dropdown-style, 'display');
  $direction: ro-get($key, $ro-dropdown-direction);
  $default: ro-get($key, 'default');
  $path: false;

  
  // *** output *** //
  position: relative;
  @if $show == 'hover' {
    cursor: pointer;
  }
  // hide checkbox. 
  > input { 
    position: absolute;
    left: -9999px;
  }

  // add more hover space
  @if $show == 'hover' and $direction {
    &:before, 
    &:after {
      content: '';
      position: absolute;
      display: block;
      #{$direction}: 0;
    }
    &:before {
      top: -20px;
      width: 25px;
      height: 20px;
    }
    &:after {
      width: 35px;
      height: 30px;
    }
  }

  > #{$child} {
    transition: all 0.4s $ro-global-bezier;
    // basic menu style
    position: absolute;
    
    // direction
    @if $direction {
      top: 0;
      #{opposite($direction)}: 100%;
    }

    // hide menu
    @if $style == 'display' {
      display: none;
    } @else if $style == 'scale' {
      -ms-transform: scaleY(0);
      -webkit-transform: scaleY(0);
      transform: scaleY(0);
      -ms-transform-origin: top;
      -webkit-transform-origin: top;
      transform-origin: top;
      .no-csstransforms & { display: none; }
    } 

    // default menu style
    @if $default {
      $bgc: #fff;
      $padding: 0.31em 1.25em;
      $border: 1px solid #dbdbdb;
      $border-radius: 0.19em;
      $shadow: rgba(0,0,0,0.15) 0px 6px 12px;

      background-color: $bgc;
      @if $border { border: $border; }
      @if $border-radius { border-radius: $border-radius; }
      @if $shadow { box-shadow: $shadow; }
      .current > a, li:hover > a { background-color: analogous($bgc 10%);}
      li { 
        transition: all 0.4s $ro-global-bezier;
        &:first-child > a { padding-top: nth($padding, 1) * 2;}
        &:last-child > a { padding-bottom: nth($padding, 1) * 2;}
      }
      a { 
        display: block;
        padding: $padding;
        color: contrast($bgc);
        &:hover { text-decoration: none; }
      }
    }
  }

  // set path
  @if $show == 'hover' {
    $path: '&:hover >';
  } @else if $show == 'click' {
    $path: '> input:checked ~';
  }

  // show
  #{$path} #{$child} {
    @if $style == 'display' {
      display: block;
    } @else if $style == 'scale' {
      -ms-transform: scaleY(1);
      -webkit-transform: scaleY(1);
      transform: scaleY(1);
      .no-csstransforms & { display: block; }
    } 
  }
}