// *** dropdown *** //
%dropdown {
  position: relative; 
  cursor: pointer;
}
%dropdown-menu {
  @extend %global-transition;
  position: absolute;
  z-index: nth($z-index, 4);
}
%dropdown-menu-hide {
  -ms-transform: scaleY(0);
  -webkit-transform: scaleY(0);
  transform: scaleY(0);
  -ms-transform-origin: top;
  -webkit-transform-origin: top;
  transform-origin: top;
}
%dropdown-menu-show {
  -ms-transform: scaleY(1);
  -webkit-transform: scaleY(1);
  transform: scaleY(1);
}

@mixin dropdown(
  $key:
    'ul'
    'hover'
    'scale'
){
  $child: 'ul';
  $show: 'hover';
  $style: 'scale';
  $default: false;
  $path: false;

  @if type-of($key) == 'string' {
    @if $key == 'default' {
      $default: true;
    } @else if index($dropdown-show, $key) {
      $show: $key;
    } @else if index($dropdown-style, $key) {
      $style: $key;
    } @else {
      $child: $key;
    }
  } @else if type-of($key) == 'list' {
    @for $i from 1 through length($key) {
      $val: nth($key, $i);

      @if $val == 'default' {
        $default: true;
      } @else if index($dropdown-show, $val) {
        $show: $val;
      } @else if index($dropdown-style, $val) {
        $style: $val;
      } @else {
        $child: $val;
      }
    }
  }

  // basic dropdown style
  @extend %dropdown;
  #{$child} {
    // basic menu style
    @extend %dropdown-menu;
    
    // hide menu
    @if $style == 'scale' {
      @extend %dropdown-menu-hide;
      .no-csstransforms & { display: none; }
    } @else if $style == 'display' {
      display: none;
    }

    // default menu style
    $bgc: #fff;
    $padding: 0.31em 1.25em;
    $border: 1px solid #dbdbdb;
    $border-radius: 0.19em;
    $shadow: rgba(0,0,0,0.15) 0px 6px 12px;

    @if $default {
      background-color: $bgc;
      @if $border { border: $border; }
      @if $border-radius { border-radius: $border-radius; }
      @if $shadow { box-shadow: $shadow; }
      .current a,li:hover a { background-color: analogous($bgc 10%);}
      li { 
        @extend %global-transition; 
        &:first-child > a { padding-top: nth($padding, 1) * 2;}
        &:last-child > a { padding-bottom: nth($padding, 1) * 2;}
      }
      a { 
        @extend %hover-no-text-decoration;
        display: block;
        padding: $padding;
        color: contrast($bgc);
      }
    }
  }

  // set path
  @if $show == 'hover' {
    $path: '&:hover >';
  } @else if $show == 'click' {
    $path: '> input:checked ~';
  }

  // show
  #{$path} #{$child} {
    @if $style == 'scale' {
      @extend %dropdown-menu-show;
      .no-csstransforms & { display: block; }
    } @else if $style == 'display' {
      display: block;
    }
  }
}
