@mixin drop-shadow($key){
  $style: args-get($key, ('lifted' 'raised' 'perspective' 'curve'), 'lifted');
  $direction: args-get($key, (left right top bottom 'horizontal' 'vertical'), bottom);
  $color: args-get-type($key, 'color', false, rgba(0, 0, 0, 0.6));
  $shadow-size: args-get-type($key, 'number', false, 10px);

  $selector: '&:before';
  @if $style == 'lifted' {
    $selector: '&:before, &:after';
  } @else if $style == 'raised' {
    $selector: false;
  }

  position: relative;
  background-color: #fff;
  @if $selector {
    #{$selector} {
      content: '';
      position: absolute;
      z-index: -2;
    }
  }

  @if $style == 'raised' {
    box-shadow: 0px ($shadow-size * 1.5) $shadow-size (- $shadow-size) lighten($color, 20%), 0px 1px 4px lighten($color, 50%);
  } @else if $style == 'lifted' {
    #{$selector} {
      bottom: ($shadow-size * 1.5);
      width: 50%;
      height: 20%;
      box-shadow: 0px ($shadow-size * 1.5) $shadow-size $color;
    }
    &:before {
      left: $shadow-size;
      @include ro-transform(rotate(-3deg));
    }
    &:after {
      right: $shadow-size;
      @include ro-transform(rotate(3deg));
    }
  } @else if $style == 'perspective' {
    #{$selector} {
      @include ro-transform(skew(40deg));
      @include ro-transform-origin(0px 100%);
      left: $shadow-size * 8;
      bottom: 5px;
      width: 50%;
      height: 35%;
      box-shadow: (- $shadow-size * 8) 0px ($shadow-size * 0.8) lighten($color, 30%);
    }
  } @else if $style == 'curve' {
    #{$selector} {
      box-shadow: 0px 0px ($shadow-size * 1.5) lighten($color, 30%);
      border-radius: #{$shadow-size} / #{($shadow-size * 10)};
      @if $direction == 'horizontal' {
        left: 0;
        right: 0;
        top: $shadow-size;
        bottom: $shadow-size;
      } @else if $direction == 'vertical' {
        left: ($shadow-size * 1.3);
        right: ($shadow-size * 1.3);
        top: 0px;
        bottom: 0px;
      } @else {
        #{$direction}: 0;
        #{opposite($direction)}: 50%;
        @if index((left right), $direction) {
          top: $shadow-size;
          bottom: $shadow-size;
        } @else {
          left: ($shadow-size * 1.3);
          right: ($shadow-size * 1.3);
        }
      }
    }
  }

}
