@mixin switch($key: 20px){
  $style: args-get($key, ('toggle' 'slider'), 'toggle');
  $border-radius: args-get-next($key, 'border-radius');
  @if $border-radius { $key: list-remove($key, $border-radius); }
  $text: args-get-next($key, 'text');
  
  $width: false;
  $height: false;
  $default-color: false;
  $active-color: false;
  @each $item in $key {
    @if type-of($item) == 'number' {
      @if not $width {
        $width: $item;
      } @else {
        $height: $item;
      }
    } @else if type-of($item) == 'color' {
      @if not $default-color {
        $default-color: $item;
      } @else {
        $active-color: $item;
      }
    }
  }
  @if not $width { $width: 20px; }
  @if not $height { $height: $width; }
  @if not $default-color { $default-color: #ddd; }
  @if not $active-color { $active-color: #3DD754; }
  $width: em($width);
  $height: em($height);
  $gap: ($height / 8);

  // hide checkbox or radio
  > input {
    position: absolute; 
    left: -9999px;
  }

  @if $text {
    label > span {
      position: absolute;
      left: $gap;
      top: $gap;
      display: inline-block;
      white-space: nowrap;
      transition: color 0.3s;
      &:before, &:after {
        display: inline-block;
        line-height: $height;
        width: $width;
        text-align: center;
      }
      &:before { content: '#{nth($text, 1)}'; }
      &:after { content: '#{nth($text, 2)}'; }
    }
  }

  > input {
    // normal style
    ~ label {
      display: inline-block;
      height: $height;
      line-height: $height;
      transition: padding 0.3s, background-color 0.3s;

      @if $style == 'toggle' {
        background-color: $default-color;
        padding: $gap ($height * 0.85) $gap $gap;
      } @else if $style == 'slider' {
        $width: $width * 1.8;
        text-align: left;
        position: relative;
        padding: 0 $width 0 0;
        &:before, &:after { transition: background-color 0.3s; }
        &:before {
          content: '';
          width: $width;
          height: 1px;
          position: absolute;
          left: ($height / 2);
          top: ($height / 2);
          z-index: -1;
          background-color: $default-color;
        }
      }

      @if $border-radius {
        border-radius: $border-radius;
      }

      @if $text {
        position: relative;
        width: $width;
        padding-right: ($width * 2 - $height * 0.85);
      }

      &:after {
        content: '';
        display: inline-block;
        height: $height;
        background-color: #fff;

        @if $style == 'toggle' {
          width: $width;
          box-shadow: 0 $gap $gap 0 rgba(0, 0, 0, 0.2);
        } @else if $style == 'slider' {
          width: $height;
          box-shadow: 0 ($gap / 1.3) $gap 0 rgba(0, 0, 0, 0.2);
        }

        @if $border-radius {
          border-radius: $border-radius;
        }

        @if $text { position: relative; }
      }
    }

    // active style
    &:checked ~ label {
      padding: $gap $gap $gap ($height * 0.85);
      @if $style == 'toggle' {
        background-color: $active-color;
      } @else if $style == 'slider' {
        padding: 0 0 0 $width;
        &:before, &:after {
          background-color: $active-color;
        }
      }

      @if $text {
        padding-left: ($width * 2 - $height * 0.85);
        > span { color: contrast($active-color); }
      }
    }
  }
}
