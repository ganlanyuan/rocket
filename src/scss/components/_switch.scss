/// Pure css switch.   
/// $key: `$size $active-color radius round`
/// 
/// @group components
/// @example markup -markup
/// <div class="switch">
///   <input type="checkbox" id="switch1" name="switch">
///   <label for="switch1"></label>
/// </div>
/// @example scss - Usage
/// .switch { @include switch(30px #3DD754 round); }
///
/// @link http://creatiointl.org/gallery/william/rocket/components-switch.php demo
/// @link https://github.com/ganlanyuan/rocket full document

@mixin switch(
  $key:
    20px
){
  $radius: ro-get($key, 'radius');
  $round: ro-get($key, 'round');
  $size: ro-get-type($key, 'number', false, 20px);
  $active-color: ro-get-type($key, 'color', false, #3DD754);
  
  // change em, rem to px
  @if $size {
    @if unitless($size) {
      $size: ($size * 1px);
    } @else if unit($size) and unit($size) != 'px' {
      $size: strip-unit($size) * 16 * 1px;
    }
  }

  > input {
    position: absolute; 
    left: -9999em;
  }

  > input {

    // normal style
    + label {
      display: inline-block;
      padding: 0.3em ($size + 10px) 0.3em 0.3em;
      height: $size;
      line-height: $size;
      background-color: #ddd;
      transition: padding 0.3s ease 0s, background-color 0.3s ease 0s;
      @if $radius {
        border-radius: $ro-button-radius;
      } @else if $round {
        border-radius: $ro-button-round;
      }

      &:after {
        content: '';
        display: inline-block;
        width: $size;
        height: $size;
        background-color: #fff;
        @if $radius {
          border-radius: $ro-button-radius;
        } @else if $round {
          border-radius: $ro-button-round;
        }
      }
    }

    // active style
    &:checked + label {
      background-color: $active-color;
      padding: 0.3em 0.3em 0.3em ($size + 10px);
    }
  }
}
