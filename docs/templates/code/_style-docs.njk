{% macro get(componentName) %}
{% if componentName === "layoutsetting_style1" %}
$ro-layout: (
  container: 1024px,
  gutter: 20px,
);

{% elif componentName === "container_demo1" %}
.container1 { @include container(600px); }

{% elif componentName === "container_demo2" %}
.container2 {
  @include container(800px gutter 2% left);
}

{% elif componentName === "grid_demo1" %}
.grid1 { @include grid( (3 7 4) ); }
// 1st div child: 3 columns;
// 2nd div child: 7 columns;
// 3rd div child: 4 columns;

{% elif componentName === "grid_demo2" %}
.grid2 { @include grid( (3 7 4 : 1 0 0) ); }
// or (3:1, 7:0, 4:0)
// orders: 1 0 0. The first div child will go last.

{% elif componentName === "grid_demo3" %}
$main: ( (3 7 4) (2 5) );
.grid3 { @include grid($main); }
// 1st row: (3 7 4)
// 2nd row: (2 5)

{% elif componentName === "grid_demo4" %}
.grid4 { @include grid( (2 5) child section); }

{% elif componentName === "grid_demo5" %}
$breakpoints: (
  medium: 800px,
  large: 1200px,
);
$main: (
  'default': (3 4) ( 2 5) 1,
  medium: (2 7 3: 1 0 1) (1 1: 1 0),
  1000px: (2 7 3 4 4),
);
.grid5 { @include grid($main $breakpoints); }

{% elif componentName === "liquid2_demo1" %}
.liquid-2-1 { @include liquid-2( ('auto' 200px) ); }
// 1st column: fluid;
// 2nd column: 200px;

{% elif componentName === "liquid2_demo2" %}
.liquid-2-2 {
  @include liquid-2( ('auto' 200px : 2 1) gutter 10px);
}
// order: 2 1;

{% elif componentName === "liquid2_demo3" %}
.liquid-2-3 {
  @include liquid-2( (600px: ('auto':2, 200px:1)) min screen );
}

{% elif componentName === "liquid2_demo4" %}
.liquid-2-4 { @include liquid-2( ('auto' 200px) child (main aside) ); }
// 1st column: fluid;
// 2nd column: 200px;

{% elif componentName === "liquid3_demo1" %}
.liquid-3-1 { @include liquid-3( (150px 'auto' 200px) ); }
// 1st column: 150px;
// 2nd column: fluid;
// 3rd column: 200px;

{% elif componentName === "liquid3_demo2" %}
.liquid-3-2 { 
  @include liquid-3( (150px 'auto' 200px : 0 2 1) gutter 30px ); 
}
// order: 0 2 1;

{% elif componentName === "liquid3_demo3" %}
.liquid-3-3 { 
  @include liquid-3( (600px: (150px:0, 'auto':2, 200px:1)) gutter 30px); 
}

{% elif componentName === "liquid3_demo4" %}
.liquid-3-4 { 
  @include liquid-3( (150px, 'auto', 200px) child (nav main aside)); 
}

{% elif componentName === "gallery_demo1" %}
.gallery-1 { @include gallery(3); }

{% elif componentName === "gallery_demo2" %}
.gallery-2 { @include gallery(4 gutter 2% RTL); }
// gutter: 2%;
// direction: right-to-left

{% elif componentName === "gallery_demo3" %}
.gallery-3 {
  @include gallery( ('default': 2, 600px: 3, 800px: 4) ); 
}
// default: 2 items per row
// 600px and up: 3 items per row
// 800px and up: 4 items per row

{% elif componentName === "gallery_demo4" %}
.gallery-4 { @include gallery(3 child div); }

{% elif componentName === "masonry_demo1" %}
.masonry-1 { @include masonry(3); }

{% elif componentName === "masonry_demo2" %}
.masonry-2 { @include masonry(4 gutter 20px); }

{% elif componentName === "masonry_demo3" %}
$masonry-3-layout: (
  'default': 1, 
  600px: 2, 
  768px: 3, 
  1024px: 4
);
.masonry-3 { @include masonry($masonry-3-layout child '.panel'); }

{% elif componentName === "metro_demo1" %}
.metro-1 { 
  @include metro( (w5 w3 2 h2 w2 w4 of 5) gutter 10px); 
  > li:nth-child(3) { float: right; };
}
// w5: 5 units width x 1 units height
// 2: 2 units width x 2 units height
// h2: 1 units width x 2 units height
// "of 5": totaly 5 units width;

{% elif componentName === "diamond_demo1" %}
.diamond-1 { @include diamond(3 'tight'); }

{% elif componentName === "diamond_demo2" %}
.diamond-2 { @include diamond(20%); }
// diamond width: 20%

{% elif componentName === "diamond_demo3" %}
.diamond-3 { @include diamond(octagon 200px); }
// diamond width: 200px

{% elif componentName === "anglededges_demo1" %}
.angled-edges-1 {
  @include angled-edges(both #fff -5deg flip);
  background-color: #58CAFF;
}

{% elif componentName === "stickyfooter_demo1" %}
.sticky-footer-1 {
  @include sticky-footer('main'); 
  header, main, footer { padding: 10px; background-color: #f5f5f5; }
  main { background-color: #FBA158; }
}

{% elif componentName === "justify_demo1" %}
.justify-1 { @include justify('li'); }

{% elif componentName === "center_demo1" %}
.center-1 {
  @include center();
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  > div { display: inline-block; padding: 10px; background-color: #FBA158; }
}

{% elif componentName === "charts_demo1" %}
$charts-data1: (
  #5AB5E1: 8.9 10.5 19.3 21.45,
);
.charts-1 { @include charts($charts-data1 'bar' 'steps' (2 22)); }
 
$charts-data2: (
  #E44B22: 8.9 10.5 19.3 21.45,
  #E48A22: 5 10 16 22,
  #22A1E4: 10.7 12 12 18,
);
.charts-2 { @include charts($charts-data2 'column' 'steps' (2 24) 'hide' ('numbers')); }

[class*="charts-"] {
  margin-bottom: 2em;
}

{% elif componentName === "responsivetable_demo_flipscroll" %}
table {
  text-align: left;
  width: 100%;
  font-size: 13px;
  border-collapse: collapse;
  border-spacing: 0;
}
th, td {
  padding: 10px 6px;
  border: 1px solid #dbdbdb;
}
th {
  background-color: #f5f5f5;
}

.responsive-table-1 { 
  // Requirements: $breakpoint
  @include rp-table('flip-scroll' bp 1400px) {
    border: 1px solid #dbdbdb;
    th, td { 
      border-width: 0 1px 1px 0;
      &:last-child { border-bottom-width: 0; }
    }
  }
}
 
{% elif componentName === "responsivetable_demo_scroll" %}
.responsive-table-2 { 
  // Requirements: $breakpoint
  @include rp-table('scroll' bp 1400px) {
    .table {
      border-right-width: 1px;
      th:last-child, td:last-child { border-right-width: 0; }
      .lt-ie10 & { 
        border-right-width: 0; 
        th:last-child, td:last-child { border-right-width: 1px; }
      }
    }
  } 
}
 
{% elif componentName === "responsivetable_demo_toggle" %}
.responsive-table-3 {
  // Requirements: $breakpoint, $count
  @include rp-table('toggle' 'bp' 1400px 'count' 10);
}
 
{% elif componentName === "responsivetable_demo_stack" %}
$responsive-table-4-data: (
  'First Name', 
  'Last Name', 
  'Job Title', 
  'Favorite Color', 
  'Wars or Trek?', 
  'Porn Name', 
  'Date of Birth', 
  'Dream Vacation City', 
  'GPA', 
  'Arbitrary Data'
);
.responsive-table-4 {
  // Requirements: $data, $border-color, $th-width
  @include rp-table('stack' 'bp' 1400px #dbdbdb 'data' $responsive-table-4-data) {
    tr:nth-of-type(2n) { background-color: #f5f5f5; }
    td:before { margin-right: 7px; }
    border-bottom: 1px solid #dbdbdb;
    th, td { border-bottom: 0; }
  }
}

{% elif componentName === "offcanvas_demo1" %}
// normal
.off-canvas-1 { @include off-canvas(slide-in submenu '.off-canvas-nav-1' ); }
 
.off-canvas-nav-1 {
  color: #fff;
  background-color: #000;
  a, label { 
    display: block;
    padding: 0.5em 1em; 
  }
  label { background-color: rgba(255, 255, 255, 0.2); }
  [data-submenu] {
    background-color: #FF8000;
  }
}
.checkbox-hidden {
  position: absolute;
  left: -9000px;
}
.off-canvas-1 .menu {
  display: inline-block;
  padding: 6px 10px;
  border-radius: 3px;
  border: 1px solid #ccc;
  margin-bottom: 10px;
}

{% elif componentName === "validation_demo1" %}
.validation-1 { @include validation(slide-in right default); }

{% elif componentName === "button_demo1" %}
$padding: "0.5em 0.8em";

.button-simple { @include button($padding simple); }
.button-push { @include button($padding push); }
.button-bubble { @include button($padding #2B8ACF 5px bubble ':hover'); }
.button-line-drawing { @include button($padding 'line-drawing' ':hover'); }

[class*="button-"] {
  vertical-align: middle;
  margin: 10px;
}


{% elif componentName === "parallelogram_demo1" %}
.parallelogram-1 { 
  @include parallelogram(#0C81E7 -30deg); 

  display: inline-block;
  margin-left: 30px;
  padding: 20px;
  color: #fff;
}

{% elif componentName === "dropshadows_demo1" %}
.drop-shadow-1 { @include drop-shadows(lifted bottom 15px); }
.drop-shadow-2 { @include drop-shadows(raised bottom 15px); }
.drop-shadow-3 { @include drop-shadows(perspective bottom 15px); }
.drop-shadow-4 { @include drop-shadows(curve bottom 15px); }
[class*="drop-shadow-"] {
  display: inline-block;
  width: 8em;
  text-align: center;
  padding: 20px;
  margin: 20px 50px;
  background-color: #f7f7f7;
}

{% elif componentName === "switch_demo1" %}
.switch-1 { 
  @include switch(round text ("on" "off") 36px blue); 
  margin-bottom: 10px;
}
.switch-2 { 
  @include switch(slider round 20px red); 
}

{% elif componentName === "pushtoggle_" %}
.push-toggle-1 { 
  // default style
  label {
    margin-right: -1px;
    padding: 0.6em 1.5em;
    background-image: linear-gradient(to bottom, #fff, #e1e1e1);
    border: 1px solid #ccc;
  }
 
  // active style
  @include push-toggle(){
    background-image: linear-gradient(to bottom, #ebebeb, #fff);
    box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.1) inset;
  }
}

{% elif componentName === "checkbox_demo1" %}
.checkbox-1 {
  margin-top: 10px;

  @include checkbox() {
    padding: 4px 0 4px 26px;
    &:before {
      content: '';
      display: inline-block;
      width: 8px;
      height: 8px;
      border-radius: 50%;
      background-color: #fff;
      box-shadow: 0 0 0 5px #fff, 0 0 0 6px #0080FF;
      transform: translateX(-16px) translateY(-2px);
    }
  };
  
  @include checkbox-active() {
    &:before {
      background-color: #0080FF;
    }
  };
}


{% elif componentName === "inputfile_demo1" %}
.input-file-1 {
  @include input-file() {
    margin: 10px 0;
    padding: 10px;
    color: #fff;
    background-color: #1D85E9;
    border-radius: 5px;
    box-shadow: 0 4px 0px #145796;
    transition: background-color 0.25s;
    &:hover {
      background-color: #1F91FF;
    }
  }
}

{% elif componentName === "tabs_demo1" %}
.tabs-1 { 
  @include tabs(3 'carousel'); 
  @include tabs-active(3) {
    color: #1899FF;
  } 
  @include tabs-panel-active(3) {
    border: 1px solid #1899FF;
  } 
}

{% elif componentName === "accordion_demo1" %}
.accordion-1 {
  @include accordion(div 200px);
  > label { display: block; padding: 10px; background-color: #f5f5f5; }
}

{% elif componentName === "dropdown_demo1" %}
.dropdown-1 {
  @include dropdown(click right default);
  display: inline-block;
  min-height: 140px;
  margin-top: 20px;
}

{% elif componentName === "tooltip_demo1" %}
.tooltip-1 {
  @include tooltip(right #b02df3); 
}
.tooltip-2 {
  @include tooltip(radius bottom #b02df3); 
}

{% elif componentName === "medialist_demo1" %}
.media-list-1 .media { @include media-list('media' 15px); } 
.media-list-2 .media { @include media-list('media' 15px right); }
.media-body { @include media-list('media-body'); }

{% elif componentName === "flexmedia_demo1" %}
.flex-media-1 { @include flex-media(315/560); }
.flex-media-2 { @include flex-media(1 svg); }

{% elif componentName === "type_demo1" %}
.type-1 { @include type(30px 1.8 'Georgia, Helvetica, sans-serif'); }
.type-2 { @include type(30px 1.8 uppercase bold italic right); }

{% elif componentName === "fluidtype_demo1" %}
.fluid-type-1 { @include fluid-type(font-size, (320px: 16px, 1024px: 40px)); }

{% elif componentName === "responsivetype_demo1" %}
$responsive-type-1: (
  'default': (15px 1.3 right uppercase),
  900px: 18px,
  1020px: 20px,
);
.responsive-type-1 { @include rp-type($responsive-type-1); }
 
$bp: (
  'small': 480px,
  'medium': 700px,
  'large': 1024px,
);
$responsive-type-2: (
  'default': (18px 1.3 weight-normal),
  900px: 22px,
  'large': (30px 1.2),
);
.responsive-type-2 { @include rp-type($responsive-type-2 $bp); }

{% elif componentName === "hidetext_demo1" %}
.hide-text-1 {
  @extend %hide-text;
  width: 100px;
  height: 60px;
  background: #ccc url('http://placehold.it/100x60/DD279E/ffffff?text=Brand') 0 0 no-repeat;
}

{% elif componentName === "opacity_style1" %}
.opacity { @include opacity(0.3); }

{% elif componentName === "iergba_style1" %}
.lt-ie9 .ie-rgba { @include ie-rgba(rgba(0,0,0,0.7)); }
// output:
// .lt-ie9 .ie-rgba {
//   background: none;
//   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#B3000000,endColorstr=#B3000000);
//   zoom: 1;
// }

{% elif componentName === "robreakpoint_style1" %}
@include bp('min' 640) {};
// @media (min-width: 40em) {};
@include bp('min' 'height' 640) {};
// @media (min-height: 40em) {};
@include bp('max' 640 screen) {};
// @media screen and (max-width: 39.9375em) {};
@include bp(400 767 1000 1200 1500) {};
// @media (min-width: 25em) and (max-width: 47.875em), (min-width: 62.5em) and (max-width: 74.9375em), (min-width: 93.75em){}

{% elif componentName === "atleast_demo1" %}
.at-least-1 {
  li { display: inline-block; width: 100px; }
  @include at-least('li' 4) { background-color: #25e425; }
}

{% elif componentName === "atmost_demo1" %}
.at-most-1 {
  li { display: inline-block; width: 100px; }
  @include at-most('li' 4) { background-color: #25e425; }
}

{% elif componentName === "equalto_demo1" %}
.equal-to-1 {
  li { display: inline-block; width: 100px; }
  @include equal-to('li' 4) { background-color: #25e425; }
}

{% elif componentName === "between_demo1" %}
.between-1 {
  li { display: inline-block; width: 100px; }
  @include between('li' 4 6) { background-color: #25e425; }
}

{% elif componentName === "visible_demo1" %}
.visible-1 { @include visible(700px); }
.visible-2 { @include visible(0 700px); }

{% elif componentName === "hidden_demo1" %}
.hidden-1 { @include hidden(700px); }
.hidden-2 { @include hidden(300px 500px 700px); }

{% elif componentName === "contrast_demo1" %}
.contrast-1 {
  background-color: #a6e36e; 
  color: contrast(#a6e36e);
}
.contrast-2 {
  background-color: #800000;
  color: contrast(#800000);
}
.contrast-3 {
  background-color: #6666FF;
  color: contrast(#6666FF light #D6D6E6);
}

{% elif componentName === "adjacent_demo1" %}
.adjacent-0 { background-color: #155BDF; }
.adjacent-1 { background-color: adjacent(#155BDF 1); }
.adjacent-2 { background-color: adjacent(#155BDF 2); }
.adjacent-3 { background-color: adjacent(#155BDF 3); }

{% elif componentName === "complementary_demo1" %}
.complementary-0 { background-color: #155BDF; }
.complementary-1 { background-color: complementary(#155BDF 1); }

{% elif componentName === "splitcomplementary_demo1" %}
.split-complementary-0 { background-color: #155BDF; }
.split-complementary-1 { background-color: split-complementary(#155BDF 1); }
.split-complementary-2 { background-color: split-complementary(#155BDF 2); }
.split-complementary-3 { background-color: split-complementary(#155BDF 3); }

{% elif componentName === "triad_demo1" %}
.triad-0 { background-color: #155BDF; }
.triad-1 { background-color: triad(#155BDF 1); }
.triad-2 { background-color: triad(#155BDF 2); }

{% elif componentName === "rectangle_demo1" %}
.rectangle-0 { background-color: #155BDF; }
.rectangle-1 { background-color: rectangle(#155BDF 1); }
.rectangle-2 { background-color: rectangle(#155BDF 2); }
.rectangle-3 { background-color: rectangle(#155BDF 3); }

{% elif componentName === "square_demo1" %}
.square-0 { background-color: #155BDF; }
.square-1 { background-color: square(#155BDF 1); }
.square-2 { background-color: square(#155BDF 2); }
.square-3 { background-color: square(#155BDF 3); }

{% endif %}
{% endmacro %}