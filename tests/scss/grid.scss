@import 'demo-base';
@import "../../src/scss/addons/breakpoint"; 
@import "../../src/scss/layout/grid"; 

[class*='grid-'] .cell { margin-bottom: 20px; }

$grid-list: ('layout': 3 4);
$grid-child: ('layout': 3 4, 'selector': '.child');
$grid-gutter1: ('layout': (3 4 : 2 1), 'gutter': 5%);
$grid-gutter2: ('layout': 3 4, 'gutter': 5rem);
$grid-list-direction: ('layout': 3 4, 'direction': 'RTL');
$grid-nested-list: ('layout': (3 4) 7);
$grid-map: ( 'layout': (3 4 7 : 0 2 1 ) 3 );
$grid-breakpoint: ('layout': ( 600px: 5 7 ));
$grid-global-breakpoints: ( 'layout': ('sm': 1 1, 'md': 2 1, 'lg': 3 5), 'breakpoint': $global-bps);
$grid-breakpoint-max: ( 'layout': (900px: 3 5, 600px: 2 1), 'condition': 'max' );
$grid-breakpoint-outside: ( 'layout': (5 7) );
$grid-breakpoint-nested-list: ( 'layout': ( 600px: (3 4) (2 5) 3 ) );
$grid-breakpoint-map: ( 'layout': ( 600px: (3 4 : 2 1) (2 5) 3 ) );
$grid-breakpoint-default: ( 'layout': ( 'default': 3 4, 900px: 2 7 ) );
$grid-breakpoint-complex-list: ( 'layout': ( default: (3 4) (2 5) 3, 600px: (3 4 2) (5 3), 900px: (5 2: 2 1) 3 (1 1 : 2 1) ) );

.grid-list {
  @extend %demo-show;
  &:before { content: '#{var-to-string($grid-list)}'; }
  > div { @include grid($grid-list); }
}
.grid-child {
  @extend %demo-show;
  &:before { content: '#{var-to-string($grid-child)}'; }
  > div { @include grid($grid-child); }
}
.grid-list-direction {
  @extend %demo-show;
  &:before { content: '#{var-to-string($grid-list-direction)}'; }
  > div { @include grid($grid-list-direction); }
}
.grid-gutter1 {
  @extend %demo-show;
  &:before { content: '#{var-to-string($grid-gutter1)}'; }
  > div { @include grid($grid-gutter1); }
}
.grid-gutter2 {
  @extend %demo-show;
  &:before { content: '#{var-to-string($grid-gutter2)}'; }
  > div { @include grid($grid-gutter2); }
}
.grid-nested-list {
  @extend %demo-show;
  &:before { content: '#{var-to-string($grid-nested-list)}'; }
  > div { @include grid($grid-nested-list); }
}
.grid-map {
  @extend %demo-show;
  &:before { content: '#{var-to-string($grid-map)}'; }
  > div { @include grid($grid-map); }
}
.grid-breakpoint {
  @extend %demo-show;
  &:before { content: '#{var-to-string($grid-breakpoint)}'; }
  > div { @include grid($grid-breakpoint); }
}
.grid-breakpoint-outside {
  @extend %demo-show;
  &:before { content: '@media (min-width: 600px) { #{var-to-string($grid-breakpoint-outside)} }'; }
  @media screen and (min-width: 600px) {
    > div { @include grid($grid-breakpoint); }
  }
}
.grid-global-breakpoints {
  @extend %demo-show;
  &:before { content: '#{var-to-string($grid-global-breakpoints)}'; }
  > div { @include grid($grid-global-breakpoints); }
}
.grid-breakpoint-max {
  @extend %demo-show;
  &:before { content: '#{var-to-string($grid-breakpoint-max)}'; }
  > div { @include grid($grid-breakpoint-max); }
}
.grid-breakpoint-nested-list {
  @extend %demo-show;
  &:before { content: '#{var-to-string($grid-breakpoint-nested-list)}'; }
  > div { @include grid($grid-breakpoint-nested-list); }
}
.grid-breakpoint-map {
  @extend %demo-show;
  &:before { content: '#{var-to-string($grid-breakpoint-map)}'; }
  > div { @include grid($grid-breakpoint-map); }
}
.grid-breakpoint-default {
  @extend %demo-show;
  &:before { content: '#{var-to-string($grid-breakpoint-default)}'; }
  > div { @include grid($grid-breakpoint-default); }
}
.grid-breakpoint-complex-list {
  @extend %demo-show;
  &:before { content: '#{var-to-string($grid-breakpoint-complex-list)}'; }
  > div { @include grid($grid-breakpoint-complex-list); }
}
