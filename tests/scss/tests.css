@charset "UTF-8";
/* # Module: Functions */
/* ------------------- */
/* Test: opposite [function] */
/*   ✔ return opposite direction. */
/*   ✔ return opposite direction. */
/*   ✔ return opposite direction. */
/*   ✔ return opposite direction. */
/*  */
/*  */
/* # Module: Functions */
/* ------------------- */
/* Test: strip-unit [function] */
/*   ✔ return em length */
/*  */
/*  */
/* # Module: trigonometric */
/* ----------------------- */
/* Test: sqrt [function] */
/*   ✔ return a square root of 9. */
/*   ✔ return a square root of 0. */
/*   ✔ return false when value is negative. */
/*  */
/*  */
/* # Module: Functions */
/* ------------------- */
/* Test: to-length [function] */
/*   ✔ return length */
/*   ✔ return length */
/*  */
/*  */
/* # Module: Functions */
/* ------------------- */
/* Test: to-number [function] */
/*   ✔ return number */
/*   ✔ return number */
/*  */
/*  */
/* # Module: Functions */
/* ------------------- */
/* Test: to-string [function] */
/*   ✔ return a string */
/*   ✔ return a string */
/*   ✔ return a string */
/*   ✔ return a string */
/*  */
/*  */
/* # Module: Functions */
/* ------------------- */
/* Test: pxto [function] */
/*   ✔ return em length */
/*   ✔ return rem length */
/*  */
/*  */
/* # Module: Functions */
/* ------------------- */
/* Test: em [function] */
/*   ✔ return em length */
/*  */
/*  */
/* # Module: Functions */
/* ------------------- */
/* Test: rem [function] */
/*   ✔ return rem length */
/*  */
/*  */
/* # Module: String */
/* ---------------- */
/* Test: string-slice-from [function] */
/*   ✔ get string slice after "-". */
/*   ✔ get string slice before ".". */
/*  */
/*  */
/* # Module: Functions */
/* ------------------- */
/* Test: list-remove-duplicates [function] */
/*   ✔ remove duplicate list items. */
/*  */
/*  */
/* # Module: Functions */
/* ------------------- */
/* Test: list-increase [function] */
/*   ✔ reorder number list: increase */
/*  */
/*  */
/* # Module: Functions */
/* ------------------- */
/* Test: list-decrease [function] */
/*   ✔ reorder number list: decrease */
/*  */
/*  */
/* # Module: List */
/* -------------- */
/* Test: is-nested-list [function] */
/*   ✔ This is a simple list. */
/*   ✔ This list contains nested list. */
/*   ✔ This list contains map. */
/*  */
/*  */
/* # Module: List */
/* -------------- */
/* Test: is-number-list [function] */
/*   ✔ This is a number list. */
/*   ✔ This list is a number list. */
/*   ✔ This list contains map. */
/*   ✔ This list contains string. */
/*  */
/*  */
/* # Module: Functions */
/* ------------------- */
/* Test: map-update-breakpoints [function] */
/*   ✔ update map */
/*  */
/*  */
/* # Module: map */
/* ------------- */
/* Test: is-simple-map [function] */
/*   ✔ This is a simple map. */
/*   ✔ This map containes lists. */
/*   ✔ This map contains nested map. */
/*  */
/*  */
/* # Module: Arguments */
/* ------------------- */
/* Test: args-get [function] */
/*   ✔ get a value from arguments. */
/*   ✔ get a value from arguments. */
/*   ✔ get a value from arguments. */
/*  */
/*  */
/* # Module: Arguments */
/* ------------------- */
/* Test: args-get-type [function] */
/*   ✔ get a map. */
/*   ✔ get a color. */
/*   ✔ get a color. */
/*   ✔ get a string. */
/*  */
/*  */
/* # Module: Arguments */
/* ------------------- */
/* Test: args-get-prev [function] */
/*   ✔ get prev item of "by". */
/*   ✔ "child" doesn't exists. */
/*   ✔ "map" is the first item in "$args4". */
/*   ✔ argment is not a list. */
/*  */
/*  */
/* # Module: Arguments */
/* ------------------- */
/* Test: args-get-next [function] */
/*   ✔ get a map. */
/*   ✔ get a gutter. */
/*   ✔ "child" doesn't exists. */
/*   ✔ Nothing after "gutter". */
/*   ✔ argment is not a list. */
/*  */
/*  */
/* # Module: Arguments */
/* ------------------- */
/* Test: args-get-maps [function] */
/*   ✔ get a map. */
/*   ✔ get the second map. */
/*   ✔ map doesn't found. */
/*  */
/*  */
/* # Module: List */
/* -------------- */
/* Test: get-slider-id [function] */
/*   ✔ get the last class. */
/*   ✔ get the last id. */
/*   ✖ FAILED [assert-equal]: get the entire selector when there is no class or id. */
/*     - Output [string]: header" ">" "article */
/*     - Expected [string]: header > article */
/*  */
/*  */
/* # Module: trigonometric */
/* ----------------------- */
/* Test: get-TRBL [function] */
/*   ✔ return a TRBL value. */
/*   ✔ return a TRBL value. */
/*  */
/*  */
/* # Module: Colors */
/* ---------------- */
/* Test: contrast [function] */
/*   ✔ Returns the contrast color */
/*   ✔ Returns the contrast color */
/*   ✔ Returns the contrast color */
/*   ✔ Returns the contrast color */
/*  */
/*  */
/* # Module: Colors */
/* ---------------- */
/* Test: analogous [function] */
/*   ✖ FAILED [assert-equal]: Returns the analogous color */
/*     - Output [color]: #6f8db8 */
/*     - Expected [color]: #6f8db8 */
/*   ✖ FAILED [assert-equal]: Returns the analogous color */
/*     - Output [color]: #8df3d5 */
/*     - Expected [color]: #8df3d5 */
/*  */
/*  */
/* # Module: Colors */
/* ---------------- */
/* Test: adjacent [function] */
/*   ✖ FAILED [assert-equal]: Returns the adjacent color */
/*     - Output [color]: #d9268b */
/*     - Expected [color]: #d9268b */
/*   ✖ FAILED [assert-equal]: Returns the adjacent color */
/*     - Output [color]: #d97726 */
/*     - Expected [color]: #d97726 */
/*  */
/*  */
/* # Module: Colors */
/* ---------------- */
/* Test: complementary [function] */
/*   ✖ FAILED [assert-equal]: Returns the complementary color */
/*     - Output [color]: #26d926 */
/*     - Expected [color]: #26d926 */
/*  */
/*  */
/* # Module: Colors */
/* ---------------- */
/* Test: split-complementary [function] */
/*   ✖ FAILED [assert-equal]: Returns the split-complementary color */
/*     - Output [color]: #9dd926 */
/*     - Expected [color]: #9dd926 */
/*   ✖ FAILED [assert-equal]: Returns the split-complementary color */
/*     - Output [color]: #26d9d9 */
/*     - Expected [color]: #26d9d9 */
/*  */
/*  */
/* # Module: Colors */
/* ---------------- */
/* Test: triad [function] */
/*   ✖ FAILED [assert-equal]: Returns the triad color */
/*     - Output [color]: #e6e619 */
/*     - Expected [color]: #e6e619 */
/*   ✖ FAILED [assert-equal]: Returns the triad color */
/*     - Output [color]: #265cd9 */
/*     - Expected [color]: #265cd9 */
/*  */
/*  */
/* # Module: Colors */
/* ---------------- */
/* Test: rectangle [function] */
/*   ✖ FAILED [assert-equal]: Returns the rectangle color */
/*     - Output [color]: #d97726 */
/*     - Expected [color]: #d97726 */
/*   ✖ FAILED [assert-equal]: Returns the rectangle color */
/*     - Output [color]: #26d926 */
/*     - Expected [color]: #26d926 */
/*   ✖ FAILED [assert-equal]: Returns the rectangle color */
/*     - Output [color]: #26d9d9 */
/*     - Expected [color]: #26d9d9 */
/*  */
/*  */
/* # Module: Colors */
/* ---------------- */
/* Test: square [function] */
/*   ✖ FAILED [assert-equal]: Returns the square color */
/*     - Output [color]: #d9bb26 */
/*     - Expected [color]: #d9bb26 */
/*   ✖ FAILED [assert-equal]: Returns the square color */
/*     - Output [color]: #26d926 */
/*     - Expected [color]: #26d926 */
/*   ✖ FAILED [assert-equal]: Returns the square color */
/*     - Output [color]: #5026d9 */
/*     - Expected [color]: #5026d9 */
/*  */
/*  */
/* # Module: Functions */
/* ------------------- */
/* Test: grid-get-columns [function] */
/*   ✔ return a number */
/*   ✔ return a list */
/*   ✔ return a list */
/*  */
/* Test: grid-get-orders [function] */
/*   ✔ return a list */
/*   ✔ return a list */
/*   ✔ return a list */
/*  */
/*  */
/* # SUMMARY ---------- */
/* 34 Tests: */
/*  - 26 Passed */
/*  - 8 Failed */
/* -------------------- */

/*# sourceMappingURL=tests.css.map */