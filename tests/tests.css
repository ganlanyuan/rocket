/* # Functions ---------- */
/* strip-unit [function] */
[data-module="Functions"] [data-test="strip-unit [function]"] .assert-equal {
  -result: PASS;
  -description: "return em length";
}

/* # Functions ---------- */
/* to-length [function] */
[data-module="Functions"] [data-test="to-length [function]"] .assert-equal {
  -result: PASS;
  -description: "return length";
}
[data-module="Functions"] [data-test="to-length [function]"] .assert-equal {
  -result: PASS;
  -description: "return length";
}

/* # Functions ---------- */
/* to-number [function] */
[data-module="Functions"] [data-test="to-number [function]"] .assert-equal {
  -result: PASS;
  -description: "return number";
}
[data-module="Functions"] [data-test="to-number [function]"] .assert-equal {
  -result: PASS;
  -description: "return number";
}

/* # Functions ---------- */
/* to-string [function] */
[data-module="Functions"] [data-test="to-string [function]"] .assert-equal {
  -result: PASS;
  -description: "return a string";
}
[data-module="Functions"] [data-test="to-string [function]"] .assert-equal {
  -result: PASS;
  -description: "return a string";
}
[data-module="Functions"] [data-test="to-string [function]"] .assert-equal {
  -result: PASS;
  -description: "return a string";
}
[data-module="Functions"] [data-test="to-string [function]"] .assert-equal {
  -result: PASS;
  -description: "return a string";
}

/* # Functions ---------- */
/* pxto [function] */
[data-module="Functions"] [data-test="pxto [function]"] .assert-equal {
  -result: PASS;
  -description: "return em length";
}
[data-module="Functions"] [data-test="pxto [function]"] .assert-equal {
  -result: PASS;
  -description: "return rem length";
}

/* # Functions ---------- */
/* em [function] */
[data-module="Functions"] [data-test="em [function]"] .assert-equal {
  -result: PASS;
  -description: "return em length";
}

/* # Functions ---------- */
/* rem [function] */
[data-module="Functions"] [data-test="rem [function]"] .assert-equal {
  -result: PASS;
  -description: "return rem length";
}

/* # Functions ---------- */
/* map-update-breakpoints [function] */
[data-module="Functions"] [data-test="map-update-breakpoints [function]"] .assert-equal {
  -result: PASS;
  -description: "update map";
}

/* # Functions ---------- */
/* is-deep-list [function] */
[data-module="Functions"] [data-test="is-deep-list [function]"] .assert-false {
  -result: PASS;
  -description: "This is a simple list.";
}
[data-module="Functions"] [data-test="is-deep-list [function]"] .assert-true {
  -result: PASS;
  -description: "This list contains nested list.";
}
[data-module="Functions"] [data-test="is-deep-list [function]"] .assert-true {
  -result: PASS;
  -description: "This list contains map.";
}

/* grid-get-columns [function] */
[data-module="Functions"] [data-test="grid-get-columns [function]"] .assert-equal {
  -result: PASS;
  -description: "return a number";
}
[data-module="Functions"] [data-test="grid-get-columns [function]"] .assert-equal {
  -result: PASS;
  -description: "return a list";
}
[data-module="Functions"] [data-test="grid-get-columns [function]"] .assert-equal {
  -result: PASS;
  -description: "return a list";
}

/* grid-get-orders [function] */
[data-module="Functions"] [data-test="grid-get-orders [function]"] .assert-equal {
  -result: PASS;
  -description: "return a list";
}
[data-module="Functions"] [data-test="grid-get-orders [function]"] .assert-equal {
  -result: PASS;
  -description: "return a list";
}
[data-module="Functions"] [data-test="grid-get-orders [function]"] .assert-equal {
  -result: PASS;
  -description: "return a list";
}

/* # SUMMARY ---------- */
/* 11 Tests: */
/*  - 11 Passed */
/*  - 0 Failed */
/* -------------------- */

/*# sourceMappingURL=tests.css.map */
