@import 'demo-base';

// *** layout: gallery *** //
$ro-diamond-shape: 'diamond', 'octagon' !default;

@mixin diamond($key){
  $per-row: false;
  $size: false;
  $shape: ro-get($key, $ro-diamond-shape, 'diamond');
  $combined: ro-get($key, 'combined');
  $keep: ro-get($key, 'keep');
  
  @each $item in $key {
    @if tyep-of($item) == 'number' {
      @if unitless($item) {
        $per-row: $item;
      } @else {
        $size: $item;
      }
    }
  }

  @if not $size {
    @if $per-row {
      $size: percentage(1 / $per-row);
    }
  } 
  @if not $per-row {
    @if $size and unit($size) == '%' {
      $per-row: ( $size / 100% );
    }
  } 

  // *** output *** //
  @if $size {
    @if not $keep {
      position: relative;
      float: left;
      overflow: hidden;
    }
    width: $size;

    @if not unitless($size) {
      @if unit($size) == '%' {
        padding-bottom: $size;
        height: 0;
      } @else {
        height: $size;
      }
    } 

    @if $shape == 'diamond' {
      @include transform( rotate(-45deg) scale( (1/sqrt(2)) ) );

      @if $per-row {
        .csstransforms & {
          @if $combined {
            &:nth-child(6),
            &:nth-child(15) {
              margin-left: ($size / 2);
              clear: both;
            }
            &:nth-child(n+6) {
              margin-top: (- $size / 2);
            }
          }
        }
      }

    } @else if $shape == 'octagon' {
      @include transform(rotate(-45deg));
    }

    // content
    > .diamond-content {
      @if not $keep {
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        @include center();
      }

      @if $shape == 'diamond' {
        @include transform( rotate(45deg) scale( sqrt(2) ) );
      } @else if $shape == 'octagon' {
        @include transform(rotate(45deg));
        overflow: inherit;
      }
    }
  }
}


.diamond {
  &-s,
  &-m {
    outline: 1px solid #fff;
    cursor: pointer;
  }
  &-s { 
    @include diamond(20%); 
  }
  &-m { 
    @include diamond(40%); 
    .csstransforms & {
      margin-left: -10%;
      margin-right: -10%;
      &:nth-child(n+6) {
        margin-top: -30%;
      }
      &:nth-child(6), 
      &:nth-child(10) {
        margin-left: 0;
      }
    }
  }
}
.example-diamond {
  @extend %ro-clearfix;
  max-width: 900px;
  margin: 0 auto;
  span {
    display: block;
    width: 100%;
  }
  img {
    width: inherit;
  }
}


// todo:
// 1. quantity query
// 2. clip-path method