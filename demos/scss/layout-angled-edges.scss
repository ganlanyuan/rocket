@import 'demo-base';

// *** addons: angled-edges *** //
@mixin angled-edges ($key) {
  $edges: ro-get($key, $ro-angled-edges, 'bottom');
  $flip: ro-get($key, 'flip');

  // set selector
  $selector: '&:before, &:after';
  @if $edges == 'top' {
    $selector: '&:before';
  } @else if $edges == 'bottom' {
    $selector: '&:after';
  }

  // set colors & angles
  $color1: false;
  $color2: false;
  $angle-1: false;
  $angle-2: false;
  @each $item in $key {

    // colors
    @if type-of($item) == 'color' {
      @if not $color1 {
        $color1: $item;
      } @else if not $color2 {
        $color2: $item;
      }
    }

    // angles
    @if type-of($item) == 'number' and unit($item) == 'deg' {
      @if not $angle-1 {
        $angle-1: $item;
      } @else if not $angle-2 {
        $angle-2: $item;
      }
    }
  }
  @if not $color1 {$color1: #fff; }
  @if not $color2 {$color2: #fff; }
  @if not $angle-1 { $angle-1: 5deg; }
  @if not $angle-2 { 
    $angle-2: $angle-1; 
    @if $flip { $angle-2: - $angle-1; }
  }

  // *** output *** //
  position: relative;
  overflow: hidden;
  #{$selector} {
    content: '';
    display: block;
    position: absolute;
    width: 0;
    height: 0;
    border-style: solid;
    border-color: transparent;
  }

  $border-width: 5000px;
  @if $edges == 'top' or $edges == 'bottom' {
    $dir: right;
    @if $edges == 'bottom' { $dir: left; }

    padding-#{$edges}: edge-tan($angle-1, 100%);
    #{$selector} {
      #{$edges}: 0;
      border-#{$edges}: edge-tan($angle-1, $border-width) solid $color1;
      @if strip-unit($angle-1) > 0 {
        #{$dir}: 0;
        border-#{$dir}-width: $border-width;
      } @else {
        #{opposite($dir)}: 0;
        border-#{opposite($dir)}-width: $border-width;
      }
    }
  } @else if $edges == 'both' {
    padding-top: edge-tan($angle-1, 100%);
    padding-bottom: edge-tan($angle-2, 100%);
    &:before {
      top: 0;
      border-top: edge-tan($angle-1, $border-width) solid $color1;
      @if strip-unit($angle-1) > 0 {
        right: 0;
        border-right-width: $border-width;
      } @else {
        left: 0;
        border-left-width: $border-width;
      }
    }
    &:after {
      bottom: 0;
      border-bottom: edge-tan($angle-2, $border-width) solid $color2;
      @if strip-unit($angle-2) > 0 {
        left: 0;
        border-left-width: $border-width;
      } @else {
        right: 0;
        border-right-width: $border-width;
      }
    }
  }

}

@function edge-tan($color, $width) {
  @return (tan(abs($color)) * $width);
}


$bg1: #339FEC;
$bg2: #FF4468;
.example-angled-edges {
  max-width: 950px;
  margin-left: auto;
  margin-right: auto;
  .bottom,
  .both,
  .top,
  .sibling {
    padding: 50px;
    h1,
    p {
      padding: 0;
      color: #fff;
    }
    h1 { margin: 30px 0; }
    p { 
      max-width: none; 
      font-size: 17px;
    }
  }
  .bottom,
  .both,
  .top {
    box-sizing: border-box;
    background: #52ABFF url('../images/NYSP-Cover-duncan-kendall.jpg') 0 0 no-repeat;
    background-size: cover;
  }
  .bottom { @include angled-edges(bottom 5deg $bg1); }
  .both { @include angled-edges(both 5deg flip $bg1 $bg2); }
  .top { @include angled-edges(top -5deg $bg2); }
  .sibling {
    &-1 { background-color: $bg1; }
    &-2 { background-color: $bg2; }
  }
}
